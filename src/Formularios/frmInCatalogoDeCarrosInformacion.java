/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.ClassCatalogoCarros;
import Clases.ClassCatalogoCarros_LlenarTabla;
import ConexionBaseDeDatos.ConexionBD;
import ConexionBaseDeDatos.ConexionBD_CatalogoDeCarros;
import static Formularios.frmPrincipal.jdpPantallaPrincipal;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alber
 */
public class frmInCatalogoDeCarrosInformacion extends javax.swing.JInternalFrame {

    //Variables Globales
    //Variables para Alto y Ancho de Formularios Internos
    int alto, ancho;
    
    //VARIABLES PARA RECIBIR EL DATO DEL FORMULARIO
    public static int codigo_vehiculo = 0;
    
    //VARIABLES PARA RECIBIR EL DATO DEL FORMULARIO
    public static boolean formularioFinanciamiento = false;
    
    //VARIABLES GLOBALES PARA OBTENER CODIGO Y DIRECCION
    public static int codigo_agencia;
    public static String nombre_agencia;
    
    //VARIABLES QUE GUARDARÁN LO QUE NO SE MOSTRARÁ EN LOS TXT
    int codigoVehiculo;
    int codigoSeleccionAgencia;
        
    //VARIABLES PARA OBTENER NOMBRE Y RUTA DEL ARCHIVO
    String nombreArchivo;
    String rutaArchivo;
    InputStream foto;
    boolean cambioFoto = false;
    
    //VARIABLE PARA VERIFICIAR LA ACTUALIZACIÓN DE DATOS
    boolean actualizarCarro = false;
    
    
    public frmInCatalogoDeCarrosInformacion() {
        initComponents();
        
        //LLENAR CAMPOS
        ConexionBD.Iniciar();
        llenarCampos(ConexionBD_CatalogoDeCarros.obtenerTodosLosDatosDelCarro(codigo_vehiculo));
        ConexionBD.Finalizar();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        panelFoto = new javax.swing.JPanel();
        labelFoto = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtInformacionCarrosDescripcion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtInformacionCarrosNumeroPlaca = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtInformacionCarrosMarca = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtInformacionCarrosModelo = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtInformacionCarrosColor = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtInformacionCarrosMotor = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtInformacionCarrosIdGPS = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtInformacionCarrosChipGPS = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtInformacionCarrosFoto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtInformacionCarrosAgenciaProveedora = new javax.swing.JTextField();
        lblBotonBuscarAgencia = new javax.swing.JLabel();
        lblBotonAdjuntarFoto = new javax.swing.JLabel();
        lblBotonActualizarRegistroCarro = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Finanssoreal.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(134, 185, 22));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("INFORMACIÓN DEL CARRO");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(196, 196, 196)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        panelFoto.setBackground(new java.awt.Color(255, 255, 255));
        panelFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jLabel2.setText("1. DESCRIPCIÓN:");

        txtInformacionCarrosDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInformacionCarrosDescripcionActionPerformed(evt);
            }
        });

        jLabel3.setText("2. NÚMERO DE PLACA:");

        txtInformacionCarrosNumeroPlaca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInformacionCarrosNumeroPlacaKeyTyped(evt);
            }
        });

        jLabel4.setText("3. MARCA:");

        jLabel5.setText("4. MODELO:");

        jLabel6.setText("5. COLOR:");

        jLabel7.setText("6. MOTOR:");

        jLabel8.setText("7. ID DEL GPS:");

        txtInformacionCarrosIdGPS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInformacionCarrosIdGPSKeyTyped(evt);
            }
        });

        jLabel9.setText("8. CHIP DEL GPS:");

        txtInformacionCarrosChipGPS.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInformacionCarrosChipGPSKeyTyped(evt);
            }
        });

        jLabel10.setText("9. FOTO:");

        txtInformacionCarrosFoto.setEditable(false);

        jLabel12.setText("10. AGENCIA PROVEEDORA:");

        txtInformacionCarrosAgenciaProveedora.setEditable(false);
        txtInformacionCarrosAgenciaProveedora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInformacionCarrosAgenciaProveedoraActionPerformed(evt);
            }
        });

        lblBotonBuscarAgencia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_search_20x20.png"))); // NOI18N
        lblBotonBuscarAgencia.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBotonBuscarAgencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonBuscarAgenciaMouseClicked(evt);
            }
        });

        lblBotonAdjuntarFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblBotonAdjuntarFoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBotonAdjuntarFoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonAdjuntarFotoMouseClicked(evt);
            }
        });

        lblBotonActualizarRegistroCarro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_save_50x50.png"))); // NOI18N
        lblBotonActualizarRegistroCarro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBotonActualizarRegistroCarro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonActualizarRegistroCarroMouseClicked(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_20x20.png"))); // NOI18N
        jLabel19.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9)
                                    .addComponent(txtInformacionCarrosChipGPS, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel19))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtInformacionCarrosFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblBotonAdjuntarFoto))))
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtInformacionCarrosMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtInformacionCarrosIdGPS, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel12)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(txtInformacionCarrosModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(txtInformacionCarrosColor, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)))
                            .addComponent(jLabel2)
                            .addComponent(txtInformacionCarrosDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(txtInformacionCarrosNumeroPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(txtInformacionCarrosMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtInformacionCarrosAgenciaProveedora, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblBotonBuscarAgencia)))
                        .addGap(20, 33, Short.MAX_VALUE)
                        .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(278, 278, 278)
                        .addComponent(lblBotonActualizarRegistroCarro)))
                .addContainerGap(65, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInformacionCarrosDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInformacionCarrosNumeroPlaca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInformacionCarrosMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInformacionCarrosModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtInformacionCarrosColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInformacionCarrosIdGPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInformacionCarrosMotor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10)
                                .addComponent(jLabel9))
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBotonAdjuntarFoto)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtInformacionCarrosFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtInformacionCarrosChipGPS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInformacionCarrosAgenciaProveedora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBotonBuscarAgencia)))
                    .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(lblBotonActualizarRegistroCarro)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtInformacionCarrosDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInformacionCarrosDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInformacionCarrosDescripcionActionPerformed

    private void txtInformacionCarrosAgenciaProveedoraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInformacionCarrosAgenciaProveedoraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInformacionCarrosAgenciaProveedoraActionPerformed

    private void lblBotonBuscarAgenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonBuscarAgenciaMouseClicked
        if(formularioFinanciamiento == false){
            //Abrir el Formulario para Buscar Agencias de Carros
            frmInCatalogoDeCarrosBuscarAgencia frmCatalogoDeCarrosBuscarAgencia = new frmInCatalogoDeCarrosBuscarAgencia();
            ancho = (jdpPantallaPrincipal.getWidth()/2) - frmCatalogoDeCarrosBuscarAgencia.getWidth()/2;
            alto = (jdpPantallaPrincipal.getHeight()/2) - frmCatalogoDeCarrosBuscarAgencia.getHeight()/2;

            frmInCatalogoDeCarrosBuscarAgencia.comparador = false;

            jdpPantallaPrincipal.add(frmCatalogoDeCarrosBuscarAgencia);
            frmCatalogoDeCarrosBuscarAgencia.setLocation(ancho, alto);
            frmCatalogoDeCarrosBuscarAgencia.show();
        }
        
    }//GEN-LAST:event_lblBotonBuscarAgenciaMouseClicked

    private void lblBotonActualizarRegistroCarroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonActualizarRegistroCarroMouseClicked
        if(formularioFinanciamiento == false){
            //VALIDAR CAMPOS
            if(validarCampos() == false){
                return;
            }

            //VERIFICAR SI AGREGÓ NUEVA FOTOGRAFÍA O NO
            if(cambioFoto == true){
                //SE PREPARA LA IMAGEN PARA LA INSERSIÓN
                File file = new File(rutaArchivo);
                try {
                    foto = new FileInputStream(file);
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
                }       
            }
        
            //SE ACTUALIZAN DATOS
            ConexionBD.Iniciar();
            actualizarCarro = ConexionBD_CatalogoDeCarros.actualizarCatalogoCarro("VIGENTE", "CARRO", txtInformacionCarrosDescripcion.getText().toUpperCase(), 
                              txtInformacionCarrosNumeroPlaca.getText().toUpperCase(), txtInformacionCarrosMarca.getText().toUpperCase(), txtInformacionCarrosModelo.getText().toUpperCase(), 
                              txtInformacionCarrosColor.getText().toUpperCase(), txtInformacionCarrosMotor.getText().toUpperCase(), txtInformacionCarrosIdGPS.getText().toUpperCase(), 
                              txtInformacionCarrosChipGPS.getText().toUpperCase(), foto, codigoVehiculo);
            ConexionBD_CatalogoDeCarros.actualizarSeleccionDeAgenciaParaVehiculo(codigo_agencia, codigoVehiculo);
            ConexionBD.Finalizar();
            
            //VERIFICAR SI SE INSETARON DATOS
            if(actualizarCarro == true){
                JOptionPane.showMessageDialog(null, "DATOS INGRESADOS ÉXITOSAMENTE");
                
                //VACIAR VARIABLES
                codigo_vehiculo = 0;
                codigo_agencia = 0;
                nombre_agencia = null;
                codigoVehiculo = 0;
                codigoSeleccionAgencia = 0;

                //VARIABLES PARA OBTENER NOMBRE Y RUTA DEL ARCHIVO
                nombreArchivo = null;
                rutaArchivo = null;
                foto = null;
                cambioFoto = false;
                actualizarCarro = false;
                
                //ACTUALIZA LA TABLA PRINCIPAL
                ConexionBaseDeDatos.ConexionBD.Iniciar();
                actualizarTablaCatalogoCarros(ConexionBaseDeDatos.ConexionBD_CatalogoDeCarros.mostrarTodoCatalogoDeCarros());
                ConexionBaseDeDatos.ConexionBD.Finalizar();
                
                //CERRAR EL FORMULARIO.
                this.dispose();
            }else{
                JOptionPane.showMessageDialog(null, "HUBO UN ERROR AL INGRESAR LOS DATOS");
            }  
        }
    }//GEN-LAST:event_lblBotonActualizarRegistroCarroMouseClicked

    private void lblBotonAdjuntarFotoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonAdjuntarFotoMouseClicked
        if(formularioFinanciamiento == false){
            //SE SELECCIONA EL ARCHIVO A SUBIR
            JFileChooser archivoSeleccionado = new JFileChooser();
            FileNameExtensionFilter filtro = new FileNameExtensionFilter("Fotografía", "jpg", "png", "jpeg");
            archivoSeleccionado.setFileFilter(filtro);
            int opcion = archivoSeleccionado.showOpenDialog(this);

            if(opcion == JFileChooser.APPROVE_OPTION){
                nombreArchivo = archivoSeleccionado.getSelectedFile().getName();
                rutaArchivo = archivoSeleccionado.getSelectedFile().getPath();

                cambioFoto = true;

                txtInformacionCarrosFoto.setText(nombreArchivo);
            }
        }         
    }//GEN-LAST:event_lblBotonAdjuntarFotoMouseClicked

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtInformacionCarrosFoto.getText().equals("Foto Agregada")){
            return;
        }

        //FUNCIÓN PARA VISUALIZAR LA IMAGEN
        try{
            ProcessBuilder visualizar = new ProcessBuilder();
            visualizar.command("cmd.exe","/c",rutaArchivo);
            visualizar.start();
        }catch(IOException ex){
            Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel19MouseClicked

    private void txtInformacionCarrosNumeroPlacaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInformacionCarrosNumeroPlacaKeyTyped
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtInformacionCarrosNumeroPlacaKeyTyped

    private void txtInformacionCarrosIdGPSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInformacionCarrosIdGPSKeyTyped
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtInformacionCarrosIdGPSKeyTyped

    private void txtInformacionCarrosChipGPSKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInformacionCarrosChipGPSKeyTyped
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtInformacionCarrosChipGPSKeyTyped

    
    //FUNCIONES DEL FORMULARIO
    private void llenarCampos(ResultSet estructuraTabla){
        try{
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassCatalogoCarros carro = new ClassCatalogoCarros( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                        estructuraTabla.getInt("codigo"),                        
                        estructuraTabla.getString("descripción"),
                        estructuraTabla.getString("numero_placa"),
                        estructuraTabla.getString("marca"),
                        estructuraTabla.getString("modelo"),
                        estructuraTabla.getString("color"),
                        estructuraTabla.getString("motor"),
                        estructuraTabla.getString("id_gps"),
                        estructuraTabla.getString("chip_gps"),
                        estructuraTabla.getBytes("foto"),
                        estructuraTabla.getString("agencia_proveedora"),
                        estructuraTabla.getInt("codigo_seleccion_agencia_para_vehiculo"),
                        estructuraTabla.getInt("codigo_agencia_vehiculo"));
                
                //GUARDAR DATOS QUE NO SE AGREGARÁN A LOS TEXTBOX
                codigoVehiculo = carro.getCodigo();
                codigoSeleccionAgencia = carro.getCodigo_seleccion_agencia_para_vehiculo();
                codigo_agencia = carro.getCodigo_agencia_vehiculo();                
                             
                
                //SE AGREGA LA FOTO   
                foto = new ByteArrayInputStream(carro.getFoto());
                ImageIcon fotografia = new ImageIcon(carro.getFoto());
                Image imagen = fotografia.getImage();
                Image nuevaImagen = imagen.getScaledInstance(268, 358, Image.SCALE_SMOOTH);
                ImageIcon fotografiaMostrar = new ImageIcon(nuevaImagen);
                labelFoto.setIcon(fotografiaMostrar); 
                
                
                                
                //SE AGREGAN LOS DATOS A LAS CAJAS DE TEXTO
                txtInformacionCarrosDescripcion.setText(carro.getDescripcion());
                txtInformacionCarrosNumeroPlaca.setText(carro.getNumero_placa());
                txtInformacionCarrosMarca.setText(carro.getMarca());
                txtInformacionCarrosModelo.setText(carro.getModelo());
                txtInformacionCarrosColor.setText(carro.getColor());
                txtInformacionCarrosMotor.setText(carro.getMotor());
                txtInformacionCarrosIdGPS.setText(carro.getId_gps());
                txtInformacionCarrosChipGPS.setText(carro.getChip_gps());
                txtInformacionCarrosFoto.setText("Foto Agregada");                
                txtInformacionCarrosAgenciaProveedora.setText(carro.getAgencia_proveedora());
                                
            }
        }catch(SQLException ex){
            Logger.getLogger(ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }

    //FUNCIONES
    //FUNCIÓN PARA VALIDAR CAMPOS VACÍOS
    private boolean validarCampos(){
        if(txtInformacionCarrosDescripcion.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Descripción");
            txtInformacionCarrosDescripcion.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosNumeroPlaca.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Número de Placa");
            txtInformacionCarrosNumeroPlaca.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosMarca.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Marca");
            txtInformacionCarrosMarca.requestFocusInWindow();
            return false;
        }        
        if(txtInformacionCarrosModelo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Modelo");
            txtInformacionCarrosModelo.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosColor.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Color");
            txtInformacionCarrosColor.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosMotor.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Motor");
            txtInformacionCarrosMotor.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosIdGPS.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Id de GPS");
            txtInformacionCarrosIdGPS.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosChipGPS.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Chip de GPS");
            txtInformacionCarrosChipGPS.requestFocusInWindow();
            return false;
        }   
        if(txtInformacionCarrosFoto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Fotografía");
            txtInformacionCarrosFoto.requestFocusInWindow();
            return false;
        }
        if(txtInformacionCarrosAgenciaProveedora.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Agencia Proveedora");
            txtInformacionCarrosAgenciaProveedora.requestFocusInWindow();
            return false;
        }
        return true;
    }
    
    private void actualizarTablaCatalogoCarros(ResultSet estructuraTabla) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(){
                @Override
                public boolean isCellEditable(int filas, int columnas){
                    if(columnas == 5){
                        return true;
                    }else{
                        return false;
                    }
                }
            };
            //Primero se Definen las Columnas
            modelo.addColumn("CÓDIGO");         
            modelo.addColumn("DESCRIPCIÓN");
            modelo.addColumn("MARCA");
            modelo.addColumn("MODELO");
            modelo.addColumn("AGENCIA PROVEEDORA");

            //se definen los tamaÃ±os de las columnas
            frmInCatalogoDeCarros.tbCatalogoCarros.setModel(modelo);

            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(0).setPreferredWidth(275);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(0).setMaxWidth(300);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(0).setMinWidth(5);

            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(1).setPreferredWidth(550);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(1).setMaxWidth(600);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(1).setMinWidth(5);

            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(2).setPreferredWidth(300);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(2).setMaxWidth(520);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(2).setMinWidth(5);

            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(3).setPreferredWidth(550);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(3).setMaxWidth(600);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(3).setMinWidth(5);       

            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(4).setPreferredWidth(550);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(4).setMaxWidth(600);
            frmInCatalogoDeCarros.tbCatalogoCarros.getColumnModel().getColumn(4).setMinWidth(5);  
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 

                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassCatalogoCarros_LlenarTabla person = new ClassCatalogoCarros_LlenarTabla( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                        estructuraTabla.getInt("codigo"),
                        estructuraTabla.getString("descripción"),
                        estructuraTabla.getString("marca"),
                        estructuraTabla.getString("modelo"), 
                        estructuraTabla.getString("agencia_proveedora"));

                // se aÃ±ade el registro encontrado al modelo de la tabla
                modelo.addRow(new Object[]{

                    person.getCodigo(),
                    person.getDescripcion(),                   
                    person.getMarca(),
                    person.getModelo(),
                    person.getAgencia_proveedora(),
                    });
            }

        //se muestra todo en la tabla
        frmInCatalogoDeCarros.tbCatalogoCarros.setModel(modelo);

        } catch (SQLException ex) {
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelFoto;
    public static javax.swing.JLabel lblBotonActualizarRegistroCarro;
    public static javax.swing.JLabel lblBotonAdjuntarFoto;
    public static javax.swing.JLabel lblBotonBuscarAgencia;
    private javax.swing.JPanel panelFoto;
    public static javax.swing.JTextField txtInformacionCarrosAgenciaProveedora;
    public static javax.swing.JTextField txtInformacionCarrosChipGPS;
    public static javax.swing.JTextField txtInformacionCarrosColor;
    public static javax.swing.JTextField txtInformacionCarrosDescripcion;
    private javax.swing.JTextField txtInformacionCarrosFoto;
    public static javax.swing.JTextField txtInformacionCarrosIdGPS;
    public static javax.swing.JTextField txtInformacionCarrosMarca;
    public static javax.swing.JTextField txtInformacionCarrosModelo;
    public static javax.swing.JTextField txtInformacionCarrosMotor;
    public static javax.swing.JTextField txtInformacionCarrosNumeroPlaca;
    // End of variables declaration//GEN-END:variables
}
