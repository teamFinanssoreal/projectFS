/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.ClassAgencias;
import Clases.ClassFinanciamientoMoto_verInformacion;
import ConexionBaseDeDatos.ConexionBD;
import static Formularios.frmInAgenciasInfo.codigo_direccion;
import static Formularios.frmInAgenciasInfo.txtDireccion;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Martin Rosales
 */
public class frmInFinanciamientoMotosInfo extends javax.swing.JInternalFrame {
    //VARIABLE GLOBAL PARA DOCUMENTOS
    boolean verificarSiAgregoArchivo = false;
    FileInputStream fotoSiActualiza;
    InputStream fotoSiNoActualiza;
    String nombreArchivo1, rutaArchivo1, nombreArchivo2, rutaArchivo2, nombreArchivo3, rutaArchivo3, nombreArchivo4, rutaArchivo4;
    Blob pdf1,pdf2,pdf3,pdf4;
    Blob  pdfA1, pdfA2, pdfA3, pdfA4;
    public static String codigo_agencia;
    public static int codigoFinanciamiento;
    
    //VARIABLE PARA AGREGAR LA FOTO
    InputStream fotoVehiculo;
    
    //VARIABLES PARA GUARDAR PDF
    Blob pdfContrato;
    Blob pdfRecibo;
    Blob pdfConstancia;
    Blob pdfPatentes;
    
    //ARCHIVOS PARA ACTUALIZARA DOCUMENTOS
    FileInputStream contratoNuevo;
    FileInputStream reciboNuevo;
    FileInputStream constanciaNueva;
    FileInputStream patenteNueva;
    
    //VARIABLE GLOBAL PARA DOCUMENTOS
    String nombreArchivoContrato, rutaArchivoContrato;
    String nombreArchivoRecibo, rutaArchivoRecibo;
    String nombreArchivoConstancia, rutaArchivoConstancia;
    String nombreArchivoPatentes, rutaArchivoPatentes;
    
    //VARIABLE BOOLEANAN PARA VERIFICAR SI AGREGÓ NUEVO ARCHIVO
    boolean nuevoContrato = false;
    boolean nuevoRecibo = false;
    boolean nuevaConstancia = false;
    boolean nuevaPatente = false;
    
    //VARIABLES PARA SABER SI ACTUALIZÓ CORRECATAMENTE
    boolean datosGuardar = false;
    /**
     * Creates new form frmInFinanciamientoMotosInfo
     */
    public frmInFinanciamientoMotosInfo() {
        initComponents();
        //DESPLIUEGA EL FRAME EN EL CENTRO DE LA PANTALLA
                this.setLocation ((frmPrincipal.jdpPantallaPrincipal.getWidth () - this.getWidth ()) / 2,(frmPrincipal.jdpPantallaPrincipal.getHeight () - this.getHeight ()) / 2);
                    ConexionBD.Iniciar();
                    llenarCampos(ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.obtenerTodosLosDatosDelFinanciamiento(codigo_agencia));
                    ConexionBD.Finalizar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtDpi = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        txtModelo = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtAgencia = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNumeroContrato = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCapital = new javax.swing.JTextField();
        txtTiempoMeses = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPorcentajeInteres = new javax.swing.JTextField();
        cmbTipoInteres = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        dtFechaFinalizacion = new com.toedter.calendar.JDateChooser();
        txtInteresMensual = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtInteresTotal = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtPagoMensual = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        dtFechaInicio = new com.toedter.calendar.JDateChooser();
        txtAmortizacion = new javax.swing.JTextField();
        txtCondicion = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtContrato = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtRecibos = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtConstanciaIngreso = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtPatentes = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lblArchivosAdjuntos = new javax.swing.JLabel();
        lblArchivosAdjuntos2 = new javax.swing.JLabel();
        lblArchivosAdjuntos3 = new javax.swing.JLabel();
        lblArchivosAdjuntos4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setMinimumSize(new java.awt.Dimension(870, 605));
        setPreferredSize(new java.awt.Dimension(870, 605));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(134, 185, 22));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("INFORMACION DEL FINANCIAMIENTO DE MOTOS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(151, 151, 151))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addContainerGap(49, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 870, -1));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(787, 400));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel3.setText("*CAMPOS NO MODIFICABLES*");

        jLabel4.setText("1.1 DPI");

        txtDpi.setEditable(false);

        jLabel5.setText("1.2 NOMBRE");

        txtNombre.setEditable(false);

        jLabel6.setText("1.3 TELEFONO");

        txtTelefono.setEditable(false);

        txtDireccion.setEditable(false);

        jLabel7.setText("1.4 DIRECCION");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(177, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel6)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(txtDpi)
                        .addComponent(txtNombre)
                        .addComponent(txtTelefono)
                        .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(192, 192, 192))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(89, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("1. DETALLES DEL CLIENTE", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel26.setText("2.1 DESCRIPCION:");
        jPanel5.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        txtDescripcion.setEditable(false);
        jPanel5.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 390, -1));

        jLabel30.setText("2.2 MARCA:");
        jPanel5.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        txtMarca.setEditable(false);
        jPanel5.add(txtMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 390, -1));

        jLabel34.setText("2.3 MODELO:");
        jPanel5.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        txtModelo.setEditable(false);
        jPanel5.add(txtModelo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 390, -1));

        jLabel37.setText("2.4 AGENCIA PROVEEDORA:");
        jPanel5.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        txtAgencia.setEditable(false);
        txtAgencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgenciaActionPerformed(evt);
            }
        });
        jPanel5.add(txtAgencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, 390, -1));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
        );

        jPanel5.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 20, 250, 260));

        jTabbedPane1.addTab("2. DETALLES DEL VEHICULO", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("3.1 CONDICION DEL CREDITO: ");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, -1, -1));

        jLabel9.setText("3.2 NUMERO DE CONTRATO");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));
        jPanel3.add(txtNumeroContrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 40, 163, -1));

        jLabel10.setText("3.3 CAPITAL");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 20, -1, -1));
        jPanel3.add(txtCapital, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 40, 163, -1));
        jPanel3.add(txtTiempoMeses, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 90, 163, -1));

        jLabel11.setText("3.6 TIEMPO EN MESES");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 70, -1, -1));

        jLabel12.setText("3.5 TIPO DE INTERES");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 70, -1, -1));

        jLabel13.setText("3.4 PORCENTAJE DE INTERES");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));
        jPanel3.add(txtPorcentajeInteres, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 90, 163, -1));

        cmbTipoInteres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción...", "FIJO", "VARIADO" }));
        jPanel3.add(cmbTipoInteres, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 90, 163, -1));

        jLabel16.setText("3.7 FECHA DE INICIO");
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, -1, -1));

        dtFechaFinalizacion.setEnabled(false);
        jPanel3.add(dtFechaFinalizacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 200, 160, -1));

        txtInteresMensual.setEditable(false);
        jPanel3.add(txtInteresMensual, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 200, 163, -1));

        jLabel14.setText("3.10 INTERES MENSUAL");
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 180, -1, -1));

        jLabel19.setText("3.9 AMORTIZACION");
        jPanel3.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 180, -1, -1));

        txtInteresTotal.setEditable(false);
        jPanel3.add(txtInteresTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 163, -1));

        jLabel20.setText("3.8 FECHA DE FINALIZACION");
        jPanel3.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 180, -1, -1));

        jLabel22.setText("3.12 PAGO MENSUAL");
        jPanel3.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, -1, -1));

        txtPagoMensual.setEditable(false);
        jPanel3.add(txtPagoMensual, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 260, 163, -1));

        jLabel23.setText("3.11 INTERES TOTAL");
        jPanel3.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 240, -1, -1));
        jPanel3.add(dtFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 140, 160, -1));

        txtAmortizacion.setEditable(false);
        jPanel3.add(txtAmortizacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 200, 163, -1));

        txtCondicion.setEditable(false);
        jPanel3.add(txtCondicion, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, 160, -1));

        jTabbedPane1.addTab("3. DETALLES DEL CREDITO", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setText("4.1 CONTRATO");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_25x25.png"))); // NOI18N
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel21MouseEntered(evt);
            }
        });
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 60, -1, -1));

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N
        jPanel4.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, -1, -1));

        txtContrato.setEditable(false);
        jPanel4.add(txtContrato, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 360, -1));

        jLabel25.setText("4.2 RECIBO DE AGUA, LUZ O TELEFONO");
        jPanel4.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, -1, -1));

        txtRecibos.setEditable(false);
        jPanel4.add(txtRecibos, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 110, 360, -1));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_25x25.png"))); // NOI18N
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 110, -1, -1));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N
        jPanel4.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 110, -1, -1));

        jLabel29.setText("4.3 CONSTANCIA DE INGRESOS O ESTADOS DE CUENTA");
        jPanel4.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 140, -1, -1));

        txtConstanciaIngreso.setEditable(false);
        jPanel4.add(txtConstanciaIngreso, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 160, 360, -1));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_25x25.png"))); // NOI18N
        jLabel31.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel31MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 160, -1, -1));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N
        jPanel4.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        jLabel33.setText("4.5 PATENTES Y RTU / CONSTANCIA LABORAL DEL CLIENTE");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 190, -1, -1));

        txtPatentes.setEditable(false);
        jPanel4.add(txtPatentes, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 210, 360, -1));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_25x25.png"))); // NOI18N
        jLabel35.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel35MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 210, -1, -1));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N
        jPanel4.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 210, -1, -1));

        lblArchivosAdjuntos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntosMouseClicked(evt);
            }
        });
        jPanel4.add(lblArchivosAdjuntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, -1, -1));

        lblArchivosAdjuntos2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos2MouseClicked(evt);
            }
        });
        jPanel4.add(lblArchivosAdjuntos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 110, -1, -1));

        lblArchivosAdjuntos3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos3MouseClicked(evt);
            }
        });
        jPanel4.add(lblArchivosAdjuntos3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 160, -1, -1));

        lblArchivosAdjuntos4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos4MouseClicked(evt);
            }
        });
        jPanel4.add(lblArchivosAdjuntos4, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, -1, -1));

        jTabbedPane1.addTab("4. DOCUMENTOS ADJUNTOS", jPanel4);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(31, 139, 800, 350));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_save_50x50.png"))); // NOI18N
        jLabel2.setText("ACTUALIZAR");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 500, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtAgenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgenciaActionPerformed

    private void lblArchivosAdjuntosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntosMouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);

        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivo1 = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivo1 = archivoSeleccionado.getSelectedFile().getPath();
            txtContrato.setText(nombreArchivo1);
            verificarSiAgregoArchivo = true;
        }
    }//GEN-LAST:event_lblArchivosAdjuntosMouseClicked

    private void lblArchivosAdjuntos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos2MouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);

        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivo2 = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivo2 = archivoSeleccionado.getSelectedFile().getPath();
            txtRecibos.setText(nombreArchivo2);
            verificarSiAgregoArchivo = true;
        }
    }//GEN-LAST:event_lblArchivosAdjuntos2MouseClicked

    private void lblArchivosAdjuntos3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos3MouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);

        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivo3 = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivo3 = archivoSeleccionado.getSelectedFile().getPath();
            txtConstanciaIngreso.setText(nombreArchivo3);
            verificarSiAgregoArchivo = true;
        }
    }//GEN-LAST:event_lblArchivosAdjuntos3MouseClicked

    private void lblArchivosAdjuntos4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos4MouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);

        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivo4 = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivo4 = archivoSeleccionado.getSelectedFile().getPath();
            txtPatentes.setText(nombreArchivo4);
            verificarSiAgregoArchivo = true;
        }
    }//GEN-LAST:event_lblArchivosAdjuntos4MouseClicked

    private void jLabel21MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21MouseEntered

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtContrato.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }

        //FUNCIÓN PARA VISUALIZAR PDF
        if(verificarSiAgregoArchivo == true){//PRIMER IF POR SI SE AGREGA NUEVO ARCHIVO
            try{
                ProcessBuilder visualizar = new ProcessBuilder();//SE PREPARA EL PROCESSBUILDER PARA VIZUALIZAR
                visualizar.command("cmd.exe","/c",rutaArchivo1);//SE LE BRINDA LA RUTA
                visualizar.start();//SE ABRE EL ARCHIVO
            }catch(IOException ex){
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{            
            try { 
                //SE PREPARA EL ARCHIVO BLOB COMO INPUTSTREAM
                InputStream bos = pdf1.getBinaryStream();        
                
                //SE REALIZAN LAS CONVERSIONES
                int tamanoInput = bos.available();
                byte[] datosPDF = new byte[tamanoInput];
                bos.read(datosPDF, 0, tamanoInput);
                
                //SE DESCARGA EL ARCHIVO EN LA RUTA DEL ROOT DEL PROYECTO
                OutputStream out = new FileOutputStream("temporal.pdf");
                out.write(datosPDF);

                //SE CIERRAN LOS STREAM
                out.close();
                bos.close();   
                
                //NUEVAMENTE CON PROCESSBUILDER SE VISUALIZA EL ARCHIVO DESCARGADO
                ProcessBuilder visualizar = new ProcessBuilder();
                visualizar.command("cmd.exe","/c","temporal.pdf");
                visualizar.start();
                
            }catch (IOException | NumberFormatException  | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Debe cerrar todos los archivos previamente abiertos. - " + ex.getMessage());
            }            
        }
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
          //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtRecibos.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }

        //FUNCIÓN PARA VISUALIZAR PDF
        if(verificarSiAgregoArchivo == true){//PRIMER IF POR SI SE AGREGA NUEVO ARCHIVO
            try{
                ProcessBuilder visualizar = new ProcessBuilder();//SE PREPARA EL PROCESSBUILDER PARA VIZUALIZAR
                visualizar.command("cmd.exe","/c",rutaArchivo2);//SE LE BRINDA LA RUTA
                visualizar.start();//SE ABRE EL ARCHIVO
            }catch(IOException ex){
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{            
            try { 
                //SE PREPARA EL ARCHIVO BLOB COMO INPUTSTREAM
                InputStream bos = pdf2.getBinaryStream();        
                
                //SE REALIZAN LAS CONVERSIONES
                int tamanoInput = bos.available();
                byte[] datosPDF = new byte[tamanoInput];
                bos.read(datosPDF, 0, tamanoInput);
                
                //SE DESCARGA EL ARCHIVO EN LA RUTA DEL ROOT DEL PROYECTO
                OutputStream out = new FileOutputStream("temporal.pdf");
                out.write(datosPDF);

                //SE CIERRAN LOS STREAM
                out.close();
                bos.close();   
                
                //NUEVAMENTE CON PROCESSBUILDER SE VISUALIZA EL ARCHIVO DESCARGADO
                ProcessBuilder visualizar = new ProcessBuilder();
                visualizar.command("cmd.exe","/c","temporal.pdf");
                visualizar.start();
                
            }catch (IOException | NumberFormatException  | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Debe cerrar todos los archivos previamente abiertos. - " + ex.getMessage());
            }            
        }
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel31MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel31MouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtConstanciaIngreso.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }

        //FUNCIÓN PARA VISUALIZAR PDF
        if(verificarSiAgregoArchivo == true){//PRIMER IF POR SI SE AGREGA NUEVO ARCHIVO
            try{
                ProcessBuilder visualizar = new ProcessBuilder();//SE PREPARA EL PROCESSBUILDER PARA VIZUALIZAR
                visualizar.command("cmd.exe","/c",rutaArchivo3);//SE LE BRINDA LA RUTA
                visualizar.start();//SE ABRE EL ARCHIVO
            }catch(IOException ex){
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{            
            try { 
                //SE PREPARA EL ARCHIVO BLOB COMO INPUTSTREAM
                InputStream bos = pdf3.getBinaryStream();        
                
                //SE REALIZAN LAS CONVERSIONES
                int tamanoInput = bos.available();
                byte[] datosPDF = new byte[tamanoInput];
                bos.read(datosPDF, 0, tamanoInput);
                
                //SE DESCARGA EL ARCHIVO EN LA RUTA DEL ROOT DEL PROYECTO
                OutputStream out = new FileOutputStream("temporal.pdf");
                out.write(datosPDF);

                //SE CIERRAN LOS STREAM
                out.close();
                bos.close();   
                
                //NUEVAMENTE CON PROCESSBUILDER SE VISUALIZA EL ARCHIVO DESCARGADO
                ProcessBuilder visualizar = new ProcessBuilder();
                visualizar.command("cmd.exe","/c","temporal.pdf");
                visualizar.start();
                
            }catch (IOException | NumberFormatException  | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Debe cerrar todos los archivos previamente abiertos. - " + ex.getMessage());
            }            
        }
    }//GEN-LAST:event_jLabel31MouseClicked

    private void jLabel35MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel35MouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtPatentes.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }

        //FUNCIÓN PARA VISUALIZAR PDF
        if(verificarSiAgregoArchivo == true){//PRIMER IF POR SI SE AGREGA NUEVO ARCHIVO
            try{
                ProcessBuilder visualizar = new ProcessBuilder();//SE PREPARA EL PROCESSBUILDER PARA VIZUALIZAR
                visualizar.command("cmd.exe","/c",rutaArchivo4);//SE LE BRINDA LA RUTA
                visualizar.start();//SE ABRE EL ARCHIVO
            }catch(IOException ex){
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{            
            try { 
                //SE PREPARA EL ARCHIVO BLOB COMO INPUTSTREAM
                InputStream bos = pdf4.getBinaryStream();        
                
                //SE REALIZAN LAS CONVERSIONES
                int tamanoInput = bos.available();
                byte[] datosPDF = new byte[tamanoInput];
                bos.read(datosPDF, 0, tamanoInput);
                
                //SE DESCARGA EL ARCHIVO EN LA RUTA DEL ROOT DEL PROYECTO
                OutputStream out = new FileOutputStream("temporal.pdf");
                out.write(datosPDF);

                //SE CIERRAN LOS STREAM
                out.close();
                bos.close();   
                
                //NUEVAMENTE CON PROCESSBUILDER SE VISUALIZA EL ARCHIVO DESCARGADO
                ProcessBuilder visualizar = new ProcessBuilder();
                visualizar.command("cmd.exe","/c","temporal.pdf");
                visualizar.start();
                
            }catch (IOException | NumberFormatException  | SQLException ex) {
                JOptionPane.showMessageDialog(null, "Debe cerrar todos los archivos previamente abiertos. - " + ex.getMessage());
            }            
        }
    }//GEN-LAST:event_jLabel35MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        //VALIDAR PESTAÑA 3 SI SE REALIZARON CAMBIOS
        if(validarCamposTab3() == false){
            return;
        }

        //PREPARAR LOS PDF SI SE AGREGARON NUEVOS
        if(nuevoContrato == true){
            File contrato = new File(rutaArchivoContrato);
            try {
                contratoNuevo = new FileInputStream(contrato);
                ConexionBD.Iniciar();
                ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarContrato(contratoNuevo, codigoFinanciamiento);
                ConexionBD.Finalizar();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(nuevoRecibo == true){
            File contrato = new File(rutaArchivoRecibo);
            try {
                reciboNuevo = new FileInputStream(contrato);
                ConexionBD.Iniciar();
                ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarRecibo(reciboNuevo, codigoFinanciamiento);
                ConexionBD.Finalizar();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(nuevaConstancia == true){
            File contrato = new File(rutaArchivoConstancia);
            try {
                constanciaNueva = new FileInputStream(contrato);
                ConexionBD.Iniciar();
                ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarConstancia(constanciaNueva, codigoFinanciamiento);
                ConexionBD.Finalizar();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(nuevaPatente == true){
            File contrato = new File(rutaArchivoPatentes);
            try {
                patenteNueva = new FileInputStream(contrato);
                ConexionBD.Iniciar();
                ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarPatente(patenteNueva, codigoFinanciamiento);
                ConexionBD.Finalizar();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        //PREPARAR FECHA DE INICIO Y FINALIZACIÓN
        //CAMBIAR EL FORMATO DE LA FECHA
        DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String fechaInicio = formato.format(dtFechaInicio.getDate());
        String fechaFinalizacion = formato.format(dtFechaFinalizacion.getDate());

        ConexionBD.Iniciar();
        ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarFinanciamientoMotos("FINANCIAMIENTO MOTO",
            txtNumeroContrato.getText().toUpperCase(), codigoFinanciamiento);
            datosGuardar = ConexionBaseDeDatos.ConexionBD_FinanciamientoMotos.actualizarDetalleFinanciamientoMotos(txtCondicion.getText().toUpperCase(),
            Double.parseDouble(txtCapital.getText()), Double.parseDouble(txtPorcentajeInteres.getText()), cmbTipoInteres.getSelectedItem().toString(),
            Integer.parseInt(txtTiempoMeses.getText()), fechaInicio, fechaFinalizacion, Double.parseDouble(txtInteresMensual.getText()), Double.parseDouble(txtAmortizacion.getText()),
            Double.parseDouble(txtPagoMensual.getText()), Double.parseDouble(txtInteresTotal.getText()), 0, codigoFinanciamiento);
        ConexionBD.Finalizar();

        if(datosGuardar == true){
            JOptionPane.showMessageDialog(null, "DATOS REGISTRADOS EXITOSAMENTE");

            //SE LIMPIAN VARIABLES
            codigoFinanciamiento =    0;

            //VARIABLE GLOBAL PARA DOCUMENTOS
            nombreArchivoContrato=null;
            rutaArchivoContrato = null;
            nombreArchivoRecibo = null;
            rutaArchivoRecibo = null;
            nombreArchivoConstancia = null;
            rutaArchivoConstancia = null;
            nombreArchivoPatentes = null;
            rutaArchivoPatentes = null;

            //VARIABLES GLOBALES PARA GUARDAR DOCUMENTOS
            pdfContrato = null;
            pdfRecibo = null;
            pdfConstancia = null;
            pdfPatentes = null;

            //VERIFICAR DATOS GUARDADOS
            datosGuardar = false;

            //ARCHIVOS PARA ACTUALIZARA DOCUMENTOS
            contratoNuevo = null;
            reciboNuevo = null;
            constanciaNueva = null;
            patenteNueva = null;
            
            //ACTUALIZA LA TABLA PRINCIPAL
            frmInFinanciamientoMotos.actualizarTabla = true;
            
            //SE CIERRA EL FORMULARIO
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(null, "HUBU UN ERROR AL GUARDAR LOS DATOS");
        }
    }//GEN-LAST:event_jLabel2MouseClicked
 
    private void llenarCampos(ResultSet estructuraTabla){
        try{
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassFinanciamientoMoto_verInformacion financiamiento = new ClassFinanciamientoMoto_verInformacion( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                        
                estructuraTabla.getString("dpi_cliente"),
                estructuraTabla.getString("nombre_cliente"),
                estructuraTabla.getString("telefono_cliente"),
                estructuraTabla.getString("direccion_cliente"),
                estructuraTabla.getBytes("foto_vehiculo"),
                estructuraTabla.getString("descripcion_vehiculo"),
                estructuraTabla.getString("marca_vehiculo"),
                estructuraTabla.getString("modelo_vehiculo"),
                estructuraTabla.getString("agencia_proveedora_vehiculo"),
                estructuraTabla.getString("condicion_credito"),
                estructuraTabla.getString("numero_contrato"),
                estructuraTabla.getDouble("capital"),
                estructuraTabla.getDouble("porcentaje_interes"),
                estructuraTabla.getString("tipo_interes"),
                estructuraTabla.getInt("tiempo_meses"),
                estructuraTabla.getString("fecha_inicial"),
                estructuraTabla.getString("fecha_finalizacion"),
                estructuraTabla.getDouble("amortizacion"),
                estructuraTabla.getDouble("interes_mensual"),
                estructuraTabla.getDouble("interes_total"),
                estructuraTabla.getDouble("cuota_mensual"),
                estructuraTabla.getBlob("pdf_contrato"),
                estructuraTabla.getBlob("pdf_recibo_agua_luz_telefono"),
                estructuraTabla.getBlob("pdf_constancia_ingresos_estados_cuenta"),
                estructuraTabla.getBlob("pdf_patentes_rtu_o_constancia_laboral"));
                
               //GUARDAR DATOS QUE NO SE AGREGARÁN A LOS TEXTBOX
               pdf1 = financiamiento.getPdf_contrato();
               pdf2 = financiamiento.getPdf_recibo_agua_luz_telefono();
               pdf3 = financiamiento.getPdf_constancia_ingresos_estados_cuenta();
               pdf4 = financiamiento.getPdf_constancia_ingresos_estados_cuenta();
               
               //SENTENCIA PARA LOS COMBOBOX
                int cmbTipo;
               //DEFINE QUE VALOR SE SETEARA EN EL COMBOBOX DE TIPO DE INTERES 
                if(financiamiento.getTipo_interes().equals("FIJO")){
                    cmbTipo = 1;
                }else{
                    cmbTipo = 2;
                }
               
                //CONVERSIÓN DE FECHA DE STRING A DATE
                DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
                Date fechaInicio = null, fechaFinal = null;
                try {
                    fechaInicio = formato.parse(financiamiento.getFecha_inicio());
                    fechaFinal = formato.parse(financiamiento.getFecha_final());
                } catch (ParseException ex) {
                    Logger.getLogger(frmInClienteInformacion.class.getName()).log(Level.SEVERE, null, ex);
                }
                
                //SE AGREGAN LOS DATOS A LAS CAJAS DE TEXTO
               txtDpi.setText(financiamiento.getDpi_cliente());
               txtNombre.setText(financiamiento.getNombre_cliente());
               txtTelefono.setText(financiamiento.getTelefono_cliente());
               txtDireccion.setText(financiamiento.getDireccion_cliente());
               
               txtDescripcion.setText(financiamiento.getDescripcion_vehiculo());
               txtMarca.setText(financiamiento.getMarca_vehiculo());
               txtMarca.setText(financiamiento.getMarca_vehiculo());
               txtModelo.setText(financiamiento.getModelo_vehiculo());
               txtAgencia.setText(financiamiento.getAgencia_proveedora_vehiculo());
               fotoSiNoActualiza = new ByteArrayInputStream(financiamiento.getFoto_vehiculo());
               ImageIcon fotografia = new ImageIcon(financiamiento.getFoto_vehiculo());
                Image imagen = fotografia.getImage();
                Image nuevaImagen = imagen.getScaledInstance(248, 258, Image.SCALE_SMOOTH);
                ImageIcon fotografiaMostrar = new ImageIcon(nuevaImagen);
                lblFoto.setIcon(fotografiaMostrar);
               
                txtCondicion.setText(financiamiento.getCondicion_credito());
                txtNumeroContrato.setText(financiamiento.getNumero_contrato());
                txtCapital.setText(financiamiento.getCapital().toString());
                txtCapital.setText(financiamiento.getCapital().toString());
                txtPorcentajeInteres.setText(financiamiento.getPorcentaje_interes().toString());
                cmbTipoInteres.setSelectedIndex(cmbTipo);
                String tiempo = financiamiento.getTiempo_meses() + "";
                txtTiempoMeses.setText(tiempo);
                dtFechaInicio.setDate(fechaInicio);
                dtFechaFinalizacion.setDate(fechaFinal);
                txtAmortizacion.setText(financiamiento.getAmortizacion().toString());
                txtInteresTotal.setText(financiamiento.getInteres_total().toString());
                txtPagoMensual.setText(financiamiento.getCuota_mensual().toString());
                txtInteresMensual.setText(financiamiento.getInteres_mensual().toString());
                if(pdf1 != null){
                    txtContrato.setText("PDF Agregado");
                }
                if(pdf2 != null){
                    txtRecibos.setText("PDF Agregado");
                }
                if(pdf3 != null){
                    txtConstanciaIngreso.setText("PDF Agregado");
                }
                if(pdf4 != null){
                    txtPatentes.setText("PDF Agregado");
                }
            }
        }catch(SQLException ex){
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
    //FUNCIÓN PARA VALIDAR PESTAÑA 3
    private boolean validarCamposTab3(){
        if(txtNumeroContrato.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Número de Contrato");
            txtNumeroContrato.requestFocusInWindow();
            return false;
        }
        if(txtCapital.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Capital");
            txtCapital.requestFocusInWindow();
            return false;
        }
        if(txtPorcentajeInteres.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Porcentaje de Interés");
            txtPorcentajeInteres.requestFocusInWindow();
            return false;
        }
        if(cmbTipoInteres.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Campo no Seleccionado - Tipo de Interés");
            cmbTipoInteres.requestFocusInWindow();
            return false;
        }
        if(txtTiempoMeses.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Tiempo en Meses");
            txtTiempoMeses.requestFocusInWindow();
            return false;
        }
        if(dtFechaInicio.getDate() == null){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Fecha de Inicio");
            dtFechaInicio.requestFocusInWindow();
            return false;
        }
        if(dtFechaFinalizacion.getDate() == null){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Fecha de Finalización");
            dtFechaFinalizacion.requestFocusInWindow();
            return false;
        }
        if(txtAmortizacion.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Amortización");
            txtAmortizacion.requestFocusInWindow();
            return false;
        }
        if(txtInteresMensual.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Interés Mensual");
            txtInteresMensual.requestFocusInWindow();
            return false;
        }
        if(txtInteresTotal.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Interés Total");
            txtInteresTotal.requestFocusInWindow();
            return false;
        }
        if(txtPagoMensual.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Pago Mensual");
            txtPagoMensual.requestFocusInWindow();
            return false;
        }
        return true;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTipoInteres;
    private com.toedter.calendar.JDateChooser dtFechaFinalizacion;
    private com.toedter.calendar.JDateChooser dtFechaInicio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblArchivosAdjuntos;
    private javax.swing.JLabel lblArchivosAdjuntos2;
    private javax.swing.JLabel lblArchivosAdjuntos3;
    private javax.swing.JLabel lblArchivosAdjuntos4;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextField txtAgencia;
    private javax.swing.JTextField txtAmortizacion;
    private javax.swing.JTextField txtCapital;
    private javax.swing.JTextField txtCondicion;
    private javax.swing.JTextField txtConstanciaIngreso;
    private javax.swing.JTextField txtContrato;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDpi;
    private javax.swing.JTextField txtInteresMensual;
    private javax.swing.JTextField txtInteresTotal;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumeroContrato;
    private javax.swing.JTextField txtPagoMensual;
    private javax.swing.JTextField txtPatentes;
    private javax.swing.JTextField txtPorcentajeInteres;
    private javax.swing.JTextField txtRecibos;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtTiempoMeses;
    // End of variables declaration//GEN-END:variables
}
