/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.ClassFinanciamientoCarro_BuscarCliente;
import Clases.ClassFinanciamientoCarro_BuscarVehiculo;
import Clases.ClassFinanciamientoCarro_LlenarTabla;
import static Formularios.frmInFinanciamientoCarros.tbClientes;
import static Formularios.frmPrincipal.jdpPantallaPrincipal;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Blob;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Martin Rosales
 */
public class frmInFinanciamientoCarrosNuevo extends javax.swing.JInternalFrame {

    //VARIABLES GLOBALES
    //VARIABLE PARA CORRER LOS TAB
    int contadorTab = 0;
    
    //VARIABLE GLOBAL PARA DOCUMENTOS
    String nombreArchivoContrato, rutaArchivoContrato;
    String nombreArchivoRecibo, rutaArchivoRecibo;
    String nombreArchivoConstancia, rutaArchivoConstancia;
    String nombreArchivoPatentes, rutaArchivoPatentes;
    
    //VARIABLES GLOBALES PARA GUARDAR DOCUMENTOS
    FileInputStream pdfContrato;
    FileInputStream pdfRecibo;
    FileInputStream pdfConstancia;
    FileInputStream pdfPatentes;
    
    //VARIABLE PARA POSICIONAR FORMULARIO DE MÁS INFORMACIÓN
    int ancho, alto;
    
    //VERIFICAR DATOS GUARDADOS
    boolean datosGuardados1 = false;
    boolean datosGuardados2 = false;
    
    public frmInFinanciamientoCarrosNuevo() { //--------------------CLASE PRINCIPAL 
        initComponents();
        //DESPLIEGA EL FRAME EN EL CENTRO DE LA PANTALLA
        this.setLocation ((frmPrincipal.jdpPantallaPrincipal.getWidth () - this.getWidth ()) / 2,(frmPrincipal.jdpPantallaPrincipal.getHeight () - this.getHeight ()) / 2);;
        //((javax.swing.plaf.basic.BasicInternalFrameUI)this.getUI()).setNorthPane(null);
              
        //Conexion:
        ConexionBaseDeDatos.ConexionBD.Iniciar();
        mostrarDatosBuscarCliente(ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.mostrarTodoFinanciamientoCarrosBuscarCliente());
        mostrarDatosBuscarVehiculo(ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.mostrarTodoFinanciamientoCarrosBuscarVehiculo());
        ConexionBaseDeDatos.ConexionBD.Finalizar();    
        
        //DESHABILITAR PESTAÑAS
        jTabbedPane1.setEnabledAt(1, false);
        jTabbedPane1.setEnabledAt(2, false);
        jTabbedPane1.setEnabledAt(3, false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBusquedaParametros = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDetallesDelCliente = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        panelFoto = new javax.swing.JPanel();
        labelFoto = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDetallesVehiculo = new javax.swing.JTable();
        jLabel18 = new javax.swing.JLabel();
        txtDetalleVehiculoBusqueda = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        lblBotonMasInformacion = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNumeroContrato = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtCapital = new javax.swing.JTextField();
        txtTiempoCredito = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtPorcentajeInteres = new javax.swing.JTextField();
        cmbTipoInteres = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        dtFechaFinalizacion = new com.toedter.calendar.JDateChooser();
        jSeparator1 = new javax.swing.JSeparator();
        txtValidarDatos = new javax.swing.JLabel();
        txtInteresMensual = new javax.swing.JTextField();
        lblInteresMensual = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtInteresTotal = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        lblPagoMensual = new javax.swing.JLabel();
        txtPagoMensual = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        dtFechaInicio = new com.toedter.calendar.JDateChooser();
        txtAmortizacion = new javax.swing.JTextField();
        txtCondicionCredito = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        lblArchivosAdjuntos = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        txtArchivoContrato = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtArchivoRecibo = new javax.swing.JTextField();
        lblArchivosAdjuntos2 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        txtArchivoConstancia = new javax.swing.JTextField();
        lblArchivosAdjuntos3 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtArchivoPatentes = new javax.swing.JTextField();
        lblArchivosAdjuntos4 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        lblBotonVerContrato = new javax.swing.JLabel();
        lblBotonVerRecibo = new javax.swing.JLabel();
        lblBotonVerConstancia = new javax.swing.JLabel();
        lblBotonVerPatentes = new javax.swing.JLabel();
        lbBotonSiguiente = new javax.swing.JLabel();
        lbBotonSiguiente1 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        setClosable(true);
        setMinimumSize(null);

        jPanel1.setBackground(new java.awt.Color(134, 185, 22));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("REGISTRAR NUEVO FINANCIAMIENTO DE CARROS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(130, 130, 130))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(49, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("*CAMPOS NO MODIFICABLES*");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jLabel4.setText("BUSCAR PARÁMETROS:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, -1, -1));

        txtBusquedaParametros.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBusquedaParametrosKeyReleased(evt);
            }
        });
        jPanel2.add(txtBusquedaParametros, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 81, 422, -1));

        tbDetallesDelCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbDetallesDelCliente);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 620, 121));

        jTabbedPane1.addTab("1. DETALLES DEL CLIENTE", jPanel2);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        panelFoto.setBackground(new java.awt.Color(255, 255, 255));
        panelFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        labelFoto.setForeground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 289, Short.MAX_VALUE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
        );

        tblDetallesVehiculo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblDetallesVehiculo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDetallesVehiculoMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblDetallesVehiculo);

        jLabel18.setText("2.1 BÚSQUEDA DEL VEHÍCULO");

        txtDetalleVehiculoBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDetalleVehiculoBusquedaKeyReleased(evt);
            }
        });

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_search_20x20.png"))); // NOI18N

        lblBotonMasInformacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_info_20x20.png"))); // NOI18N
        lblBotonMasInformacion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonMasInformacionMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18)
                            .addComponent(txtDetalleVehiculoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBotonMasInformacion)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBotonMasInformacion)
                            .addComponent(jLabel5)
                            .addComponent(txtDetalleVehiculoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("2. DETALLES DEL VEHÍCULO", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel8.setText("3.1 CONDICION DEL CREDITO: ");

        jLabel9.setText("3.2 NUMERO DE CONTRATO");

        txtNumeroContrato.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroContratoKeyTyped(evt);
            }
        });

        jLabel10.setText("3.3 CAPITAL");

        txtCapital.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapitalKeyTyped(evt);
            }
        });

        txtTiempoCredito.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTiempoCreditoKeyTyped(evt);
            }
        });

        jLabel11.setText("2.6 TIEMPO EN MESES");

        jLabel12.setText("2.5 TIPO DE INTERES");

        jLabel13.setText("2.4 PORCENTAJE DE INTERES");

        txtPorcentajeInteres.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPorcentajeInteresKeyTyped(evt);
            }
        });

        cmbTipoInteres.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione una opción...", "FIJO", "VARIABLE" }));

        jLabel16.setText("2.7 FECHA DE INICIO");

        dtFechaFinalizacion.setDateFormatString("yyyy-MM-dd");
        dtFechaFinalizacion.setEnabled(false);

        txtValidarDatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_accept_25x25.png"))); // NOI18N
        txtValidarDatos.setText("VALIDAR DATOS INGRESADOS");
        txtValidarDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtValidarDatosMouseClicked(evt);
            }
        });

        txtInteresMensual.setEditable(false);

        lblInteresMensual.setText("3.10 INTERES MENSUAL");

        jLabel19.setText("3.9 AMORTIZACION");

        txtInteresTotal.setEditable(false);

        jLabel20.setText("3.8 FECHA DE FINALIZACION");

        lblPagoMensual.setText("3.12 PAGO MENSUAL");

        txtPagoMensual.setEditable(false);

        jLabel23.setText("3.11 INTERES TOTAL");

        dtFechaInicio.setDateFormatString("yyyy-MM-dd");

        txtAmortizacion.setEditable(false);

        txtCondicionCredito.setEditable(false);
        txtCondicionCredito.setText("PRIMERO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtCondicionCredito, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(59, 59, 59)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNumeroContrato)
                                    .addComponent(cmbTipoInteres, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(52, 52, 52)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel9))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(76, 76, 76)
                                        .addComponent(jLabel10))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(74, 74, 74)
                                        .addComponent(jLabel11)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTiempoCredito)
                                    .addComponent(txtCapital)))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addGap(66, 66, 66)
                                .addComponent(jLabel19))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(dtFechaFinalizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(txtAmortizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtInteresMensual, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInteresMensual)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(108, 108, 108)
                                .addComponent(lblPagoMensual))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(txtInteresTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(txtPagoMensual, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPorcentajeInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(dtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtValidarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(51, 51, 51))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9))
                        .addGap(2, 2, 2)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNumeroContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCondicionCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCapital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel10))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel11)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPorcentajeInteres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbTipoInteres, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTiempoCredito, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtValidarDatos))
                .addGap(41, 41, 41)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(lblInteresMensual)
                    .addComponent(jLabel20))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtFechaFinalizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtAmortizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtInteresMensual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPagoMensual, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtInteresTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPagoMensual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jTabbedPane1.addTab("3. DETALLES DEL CREDITO", jPanel3);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel17.setText("3.1 CONTRATO");

        lblArchivosAdjuntos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntosMouseClicked(evt);
            }
        });

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N

        txtArchivoContrato.setEditable(false);

        jLabel25.setText("3.2 RECIBO DE AGUA, LUZ O TELEFONO");

        txtArchivoRecibo.setEditable(false);

        lblArchivosAdjuntos2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos2MouseClicked(evt);
            }
        });

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N

        jLabel29.setText("3.3 CONSTANCIA DE INGRESOS O ESTADOS DE CUENTA");

        txtArchivoConstancia.setEditable(false);

        lblArchivosAdjuntos3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos3MouseClicked(evt);
            }
        });

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N

        jLabel33.setText("3.5 PATENTES Y RTU / CONSTANCIA LABORAL DEL CLIENTE");

        txtArchivoPatentes.setEditable(false);

        lblArchivosAdjuntos4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_adjunto_20x20.png"))); // NOI18N
        lblArchivosAdjuntos4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblArchivosAdjuntos4MouseClicked(evt);
            }
        });

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_pdf_20x20.png"))); // NOI18N

        lblBotonVerContrato.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_20x20.png"))); // NOI18N
        lblBotonVerContrato.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonVerContratoMouseClicked(evt);
            }
        });

        lblBotonVerRecibo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_20x20.png"))); // NOI18N
        lblBotonVerRecibo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonVerReciboMouseClicked(evt);
            }
        });

        lblBotonVerConstancia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_20x20.png"))); // NOI18N
        lblBotonVerConstancia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonVerConstanciaMouseClicked(evt);
            }
        });

        lblBotonVerPatentes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon_see_20x20.png"))); // NOI18N
        lblBotonVerPatentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBotonVerPatentesMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(145, 145, 145)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(jLabel17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel25))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArchivoRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblArchivosAdjuntos2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBotonVerRecibo))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel29))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArchivoConstancia, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblArchivosAdjuntos3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBotonVerConstancia))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel33))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArchivoPatentes, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(lblArchivosAdjuntos4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBotonVerPatentes))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtArchivoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addComponent(lblArchivosAdjuntos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblBotonVerContrato)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel17)
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArchivoContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBotonVerContrato)
                            .addComponent(lblArchivosAdjuntos))))
                .addGap(8, 8, 8)
                .addComponent(jLabel25)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArchivoRecibo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArchivosAdjuntos2)
                    .addComponent(jLabel28)
                    .addComponent(lblBotonVerRecibo))
                .addGap(8, 8, 8)
                .addComponent(jLabel29)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArchivoConstancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArchivosAdjuntos3)
                    .addComponent(jLabel32)
                    .addComponent(lblBotonVerConstancia))
                .addGap(8, 8, 8)
                .addComponent(jLabel33)
                .addGap(4, 4, 4)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtArchivoPatentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArchivosAdjuntos4)
                    .addComponent(jLabel36)
                    .addComponent(lblBotonVerPatentes))
                .addContainerGap(99, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("4. DOCUMENTOS ADJUNTOS", jPanel4);

        lbBotonSiguiente.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbBotonSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_paginacion_nolimit_right_50x50.png"))); // NOI18N
        lbBotonSiguiente.setText("SIGUIENTE");
        lbBotonSiguiente.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        lbBotonSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbBotonSiguienteMouseClicked(evt);
            }
        });

        lbBotonSiguiente1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbBotonSiguiente1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_paginacion_nolimit_left_50x50.png"))); // NOI18N
        lbBotonSiguiente1.setText("ANTERIOR");
        lbBotonSiguiente1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        lbBotonSiguiente1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbBotonSiguiente1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbBotonSiguiente1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbBotonSiguiente))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBotonSiguiente)
                    .addComponent(lbBotonSiguiente1))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mostrarDatosBuscarCliente(ResultSet estructuraTabla) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int filas, int columnas){
                if(columnas == 3){
                    return true;
                }else{
                    return false;
                }
            }
            };
            //Primero se Definen las Columnas
            modelo.addColumn("CÓDIGO");
            modelo.addColumn("DPI");
            modelo.addColumn("NOMBRE");
            
            //se definen los tamaños de las columnas
            tbDetallesDelCliente.setModel(modelo);
            
            tbDetallesDelCliente.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbDetallesDelCliente.getColumnModel().getColumn(0).setMaxWidth(110);
            tbDetallesDelCliente.getColumnModel().getColumn(0).setMinWidth(5);
            
            tbDetallesDelCliente.getColumnModel().getColumn(1).setPreferredWidth(160);
            tbDetallesDelCliente.getColumnModel().getColumn(1).setMaxWidth(160);
            tbDetallesDelCliente.getColumnModel().getColumn(1).setMinWidth(5);
            
            tbDetallesDelCliente.getColumnModel().getColumn(2).setPreferredWidth(350);
            tbDetallesDelCliente.getColumnModel().getColumn(2).setMaxWidth(400);
            tbDetallesDelCliente.getColumnModel().getColumn(2).setMinWidth(5);
            
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassFinanciamientoCarro_BuscarCliente usuario = new ClassFinanciamientoCarro_BuscarCliente ( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                    estructuraTabla.getInt("codigo"),
                    estructuraTabla.getString("dpi"),
                    estructuraTabla.getString("nombre"));

                // se añade el registro encontrado al modelo de la tabla
                modelo.addRow(new Object[]{
                    usuario.getCodigo(),   
                    usuario.getDpi(),
                    usuario.getNombre()});
            }

            
            //se muestra todo en la tabla
            tbDetallesDelCliente.setModel(modelo);

            
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
    
        private void mostrarDatosBuscarVehiculo(ResultSet estructuraTabla) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int filas, int columnas){
                if(columnas == 5){
                    return true;
                }else{
                    return false;
                }
            }
            };
            //Primero se Definen las Columnas
            modelo.addColumn("CÓDIGO");
            modelo.addColumn("DESCRIPCIÓN");
            modelo.addColumn("MARCA");
            modelo.addColumn("MODELO");
            modelo.addColumn("AGENCIA PROVEEDORA");
            
            //se definen los tamaños de las columnas
            tblDetallesVehiculo.setModel(modelo);
            
            tblDetallesVehiculo.getColumnModel().getColumn(0).setPreferredWidth(70);
            tblDetallesVehiculo.getColumnModel().getColumn(0).setMaxWidth(110);
            tblDetallesVehiculo.getColumnModel().getColumn(0).setMinWidth(5);
            
            tblDetallesVehiculo.getColumnModel().getColumn(1).setPreferredWidth(100);
            tblDetallesVehiculo.getColumnModel().getColumn(1).setMaxWidth(250);
            tblDetallesVehiculo.getColumnModel().getColumn(1).setMinWidth(5);
            
            tblDetallesVehiculo.getColumnModel().getColumn(2).setPreferredWidth(60);
            tblDetallesVehiculo.getColumnModel().getColumn(2).setMaxWidth(120);
            tblDetallesVehiculo.getColumnModel().getColumn(2).setMinWidth(5);
            
            tblDetallesVehiculo.getColumnModel().getColumn(3).setPreferredWidth(65);
            tblDetallesVehiculo.getColumnModel().getColumn(3).setMaxWidth(100);
            tblDetallesVehiculo.getColumnModel().getColumn(3).setMinWidth(5);
            
            tblDetallesVehiculo.getColumnModel().getColumn(4).setPreferredWidth(160);
            tblDetallesVehiculo.getColumnModel().getColumn(4).setMaxWidth(185);
            tblDetallesVehiculo.getColumnModel().getColumn(4).setMinWidth(5);
            
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassFinanciamientoCarro_BuscarVehiculo usuario = new ClassFinanciamientoCarro_BuscarVehiculo ( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                    estructuraTabla.getInt("codigo"),
                    estructuraTabla.getString("descripcion"),
                    estructuraTabla.getString("marca"),
                    estructuraTabla.getString("modelo"),
                    estructuraTabla.getString("agencia_proveedora"));

                // se añade el registro encontrado al modelo de la tabla
                modelo.addRow(new Object[]{
                    usuario.getCodigo(),   
                    usuario.getDescripcion(),
                    usuario.getMarca(),
                    usuario.getModelo(),
                    usuario.getAgencia_proveedora()});
            }

            
            //se muestra todo en la tabla
            tblDetallesVehiculo.setModel(modelo);

            
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
        
    private void lblArchivosAdjuntosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntosMouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);
        
        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivoContrato = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivoContrato = archivoSeleccionado.getSelectedFile().getPath();
            
            txtArchivoContrato.setText(nombreArchivoContrato);
        }
    }//GEN-LAST:event_lblArchivosAdjuntosMouseClicked

    private void lblArchivosAdjuntos2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos2MouseClicked
         //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);
        
        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivoRecibo = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivoRecibo = archivoSeleccionado.getSelectedFile().getPath();
            
            txtArchivoRecibo.setText(nombreArchivoRecibo);
        }
    }//GEN-LAST:event_lblArchivosAdjuntos2MouseClicked

    private void lblArchivosAdjuntos3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos3MouseClicked
         //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);
        
        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivoConstancia = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivoConstancia = archivoSeleccionado.getSelectedFile().getPath();
            
            txtArchivoConstancia.setText(nombreArchivoConstancia);
        }
    }//GEN-LAST:event_lblArchivosAdjuntos3MouseClicked

    private void lblArchivosAdjuntos4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblArchivosAdjuntos4MouseClicked
        //SE SELECCIONA EL ARCHIVO A SUBIR
        JFileChooser archivoSeleccionado = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Archivos PDF", "pdf");
        archivoSeleccionado.setFileFilter(filtro);
        int opcion = archivoSeleccionado.showOpenDialog(this);
        
        if(opcion == JFileChooser.APPROVE_OPTION){
            nombreArchivoPatentes = archivoSeleccionado.getSelectedFile().getName();
            rutaArchivoPatentes = archivoSeleccionado.getSelectedFile().getPath();
            
            txtArchivoPatentes.setText(nombreArchivoPatentes);
        }
    }//GEN-LAST:event_lblArchivosAdjuntos4MouseClicked

    private void txtBusquedaParametrosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBusquedaParametrosKeyReleased
        // TODO add your handling code here:
        DefaultTableModel busquedaParametros;

        //SE TRASLADAN LOS PARÁMETROS DEL JTABLE A LA DEFAULTMODELTABLE
        busquedaParametros = (DefaultTableModel) tbDetallesDelCliente.getModel();

        //SE GENERA UN TABLEROWSORTER Y SE AGREGA  NUESTRA TABLA
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(busquedaParametros);
        tbDetallesDelCliente.setRowSorter(tr);

        //SE FILTRAN LOS DATOS DE ACUERDO A LOS PARÁMETROS INGRESADOS EN EL TXT
        tr.setRowFilter(RowFilter.regexFilter(txtBusquedaParametros.getText().toUpperCase()));
    }//GEN-LAST:event_txtBusquedaParametrosKeyReleased

    private void txtDetalleVehiculoBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDetalleVehiculoBusquedaKeyReleased
        // TODO add your handling code here:
        DefaultTableModel busquedaParametros;

        //SE TRASLADAN LOS PARÁMETROS DEL JTABLE A LA DEFAULTMODELTABLE
        busquedaParametros = (DefaultTableModel) tblDetallesVehiculo.getModel();

        //SE GENERA UN TABLEROWSORTER Y SE AGREGA  NUESTRA TABLA
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(busquedaParametros);
        tblDetallesVehiculo.setRowSorter(tr);

        //SE FILTRAN LOS DATOS DE ACUERDO A LOS PARÁMETROS INGRESADOS EN EL TXT
        tr.setRowFilter(RowFilter.regexFilter(txtDetalleVehiculoBusqueda.getText().toUpperCase()));
    }//GEN-LAST:event_txtDetalleVehiculoBusquedaKeyReleased

    private void lbBotonSiguienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBotonSiguienteMouseClicked
        //VERIFICACIÓN SI ES BOTON SIGUIENTE O GUARDAR
        if(lbBotonSiguiente.getText().equals("SIGUIENTE")){
            //VALIDACIÓN DE DATOS SELECCIONADORS
            if(contadorTab == 0){
                //VALIDACIÓN SI SE SELECCIONO UN CLIENTE
                if(tbDetallesDelCliente.getSelectedRow() < 0){
                    JOptionPane.showMessageDialog(this, "Seleccione un Cliente");
                    return;
                }

                //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
                contadorTab = contadorTab + 1;
                jTabbedPane1.setSelectedIndex(contadorTab);

                //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
                jTabbedPane1.setEnabledAt(contadorTab, true);
                jTabbedPane1.setEnabledAt(contadorTab-1, false);

            }else if(contadorTab == 1){
                //VALIDACIÓN SI SE SELECCIONO UN VEHICULO
                if(tblDetallesVehiculo.getSelectedRow() < 0){
                    JOptionPane.showMessageDialog(this, "Seleccione un Vehículo");
                    return;
                }

                //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
                contadorTab = contadorTab + 1;
                jTabbedPane1.setSelectedIndex(contadorTab);

                //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
                jTabbedPane1.setEnabledAt(contadorTab, true);
                jTabbedPane1.setEnabledAt(contadorTab-1, false);
            }else if(contadorTab == 2){
                //VALIDACIÓN DE CAMPOS LLENOS
                if(validarCamposTab3() == false){
                    return;
                }                

                //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
                contadorTab = contadorTab + 1;
                jTabbedPane1.setSelectedIndex(contadorTab);

                //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
                jTabbedPane1.setEnabledAt(contadorTab, true);
                jTabbedPane1.setEnabledAt(contadorTab-1, false);
                
                //CAMBIAR TEXTO E ICONO DE SIGUIENTE
                InputStream img = getClass().getResourceAsStream("/Imagenes/crud_save_50x50.png");
                ImageIcon icono;
                try {
                    icono = new ImageIcon(ImageIO.read(img));
                    lbBotonSiguiente.setIcon(icono);
                    lbBotonSiguiente.setText("GUARDAR");
                } catch (IOException ex) {
                    Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }                
            }           
        }else if(lbBotonSiguiente.getText().equals("GUARDAR")){
            //VALIDACIÓN DE CAMPOS LLENOS DE TAB4
            if(validarCamposTab4() == false){
                return;
            }
            
            //PREPARACIÓN DE DOCUMENTOS PARA GUARDAR E INGRESAR
            File contrato = new File(rutaArchivoContrato);
            File recibo = new File(rutaArchivoRecibo);
            File constancia = new File(rutaArchivoConstancia);
            File patentes = new File(rutaArchivoPatentes);
            try {
                pdfContrato = new FileInputStream(contrato);
                pdfRecibo = new FileInputStream(recibo);
                pdfConstancia = new FileInputStream(constancia);
                pdfPatentes = new FileInputStream(patentes);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //OBTENER CLIENTE Y VEHICULO SELECCIONADO DE LAS TABLAS
            int filaCliente = tbDetallesDelCliente.getSelectedRow();
            int filaVehiculo = tblDetallesVehiculo.getSelectedRow();
            int codigoCliente = (int) tbDetallesDelCliente.getValueAt(filaCliente, 0);
            int codigoVehiculo = (int) tblDetallesVehiculo.getValueAt(filaVehiculo, 0);
            
            //PREPARAR FECHA DE INICIO Y FINALIZACIÓN
            //CAMBIAR EL FORMATO DE LA FECHA
            DateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
            String fechaInicio = formato.format(dtFechaInicio.getDate());
            String fechaFinalizacion = formato.format(dtFechaFinalizacion.getDate());
            
            //GUARDAR DATOS INGRESADOS
            ConexionBaseDeDatos.ConexionBD.Iniciar();
            datosGuardados1 = ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.ingresarFinanciamientoCarros("FINANCIAMIENTO CARRO", txtNumeroContrato.getText().toUpperCase(),
                              pdfContrato, pdfRecibo, pdfConstancia, pdfPatentes, codigoCliente, codigoVehiculo);
            
            int ultimoFinanciamientoIngresado = ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.obtenerUltimoFinanciamientoIngresado();
            
            datosGuardados2 = ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.ingresarDetalleFinanciamientoCarros(txtCondicionCredito.getText().toUpperCase(), 
                                Double.parseDouble(txtCapital.getText()), Double.parseDouble(txtPorcentajeInteres.getText()), cmbTipoInteres.getSelectedItem().toString(), 
                                Integer.parseInt(txtTiempoCredito.getText()), fechaInicio, fechaFinalizacion, Double.parseDouble(txtInteresMensual.getText()), Double.parseDouble(txtAmortizacion.getText()), 
                                Double.parseDouble(txtPagoMensual.getText()), Double.parseDouble(txtInteresTotal.getText()), 0, ultimoFinanciamientoIngresado);
            ConexionBaseDeDatos.ConexionBD.Finalizar();
            
            
            //VERIFICACIÓN Y MENSAJE SI SE INGRESÓ BIEN
            if((datosGuardados1 == true) && (datosGuardados2 == true)){
                JOptionPane.showMessageDialog(null, "DATOS REGISTRADOS EXITOSAMENTE");
                
                //SE LIMPIAN VARIABLES
                //VARIABLE PARA CORRER LOS TAB
                contadorTab = 0;

                //VARIABLE GLOBAL PARA DOCUMENTOS
                nombreArchivoContrato=null;
                rutaArchivoContrato = null;
                nombreArchivoRecibo = null; 
                rutaArchivoRecibo = null;
                nombreArchivoConstancia = null;
                rutaArchivoConstancia = null;
                nombreArchivoPatentes = null;
                rutaArchivoPatentes = null;

                //VARIABLES GLOBALES PARA GUARDAR DOCUMENTOS
                 pdfContrato = null;
                 pdfRecibo = null;
                 pdfConstancia = null;
                 pdfPatentes = null;

                //VARIABLE PARA POSICIONAR FORMULARIO DE MÁS INFORMACIÓN
                ancho = 0;
                alto = 0;

                //VERIFICAR DATOS GUARDADOS
                datosGuardados1 = false;
                datosGuardados2 = false;
                
                //ACTUALIZA LA TABLA PRINCIPAL
                ConexionBaseDeDatos.ConexionBD.Iniciar();
                actualizarTablaCatalogoCarros(ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.mostrarTodoFinanciamientoCarros());
                ConexionBaseDeDatos.ConexionBD.Finalizar();
                
                //SE CIERRA EL FORMULARIO
                this.dispose();
            }else{
                JOptionPane.showMessageDialog(null, "HUBU UN ERROR AL GUARDAR LOS DATOS");
            }
        }
    }//GEN-LAST:event_lbBotonSiguienteMouseClicked

    private void txtValidarDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtValidarDatosMouseClicked
        //BOTON QUE VALIDA LOS CAMPOS ANTERIORES Y REALIZA LOS CALCULOS NUMERICOS
        if (txtNumeroContrato.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Campo Vacio:  NUMERO DE CONTRATO");
        return;
        }  
        if (txtCapital.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Campo Vacio:  CAPITAL");
        return;
        }
        if (txtPorcentajeInteres.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Campo Vacio:  PORCENTAJE DE INTERES");
        return;
        }
        if (cmbTipoInteres.getSelectedIndex() == 0){
        JOptionPane.showMessageDialog(this, "Campo No Seleccionado:  CONDICION DEL CREDITO");
        return;
        } 
        if (txtTiempoCredito.getText().isEmpty()){
        JOptionPane.showMessageDialog(this, "Campo Vacio:   TIEMPO DEL CREDITO");
        return;
        }  
        if (dtFechaInicio.getDate() == null){
        JOptionPane.showMessageDialog(this, "Campo Vacio:  FECHA DE INICIO");
        return;
        }
        
        //SE DEFINEN LAS VARIABLES PARA LOS CALCULOS
        double amortizacion, interesMensual, ultimoInteres, interesTotal, pagoMensual;
        
        //CALCULO DE FECHA DE FINALIZACIÓN
        Calendar calculoMeses = Calendar.getInstance();
        calculoMeses.setTime(dtFechaInicio.getDate());
        calculoMeses.add(Calendar.MONTH, Integer.parseInt(txtTiempoCredito.getText()));
        
        //CALCULO AMORTIZACION
        amortizacion = (Double.parseDouble(txtCapital.getText()) / Double.parseDouble(txtTiempoCredito.getText()));
        
        //INSERTA FECHA FINAL Y AMORTIZACION MENSUAL
        dtFechaFinalizacion.setDate(calculoMeses.getTime());
        txtAmortizacion.setText(String.format("%.2f", amortizacion));
        
        //INSERTAR CALCULOS SI ES INTERES FIJO
        if(cmbTipoInteres.getSelectedItem().equals("FIJO")){
            //CALCULO INTERES MENSUAL
            interesMensual = ((Double.parseDouble(txtCapital.getText()) * Double.parseDouble(txtPorcentajeInteres.getText()))/100);
            txtInteresMensual.setText(String.format("%.2f", interesMensual));
            lblInteresMensual.setText("3.10 INTERES MENSUAL");
            
            //CALCULO INTERES TOTAL
            interesTotal = interesMensual * Double.parseDouble(txtTiempoCredito.getText()) ;
            txtInteresTotal.setText(String.format("%.2f", interesTotal));
            
            //CALCULO PAGO MENSUAL
            pagoMensual = amortizacion + interesMensual;
            txtPagoMensual.setText(String.format("%.2f", pagoMensual));  
            lblPagoMensual.setText("3.12 PAGO MENSUAL");
        } 
        //INSERTAR CALCULO SI ES INTERES VARIABLE
        else if(cmbTipoInteres.getSelectedItem().equals("VARIABLE")){           
            //CALCULO INTERES MENSUAL
            interesMensual = ((Double.parseDouble(txtCapital.getText()) * Double.parseDouble(txtPorcentajeInteres.getText()))/100);
            txtInteresMensual.setText(String.format("%.2f", interesMensual));
            lblInteresMensual.setText("3.10 PRIMER INTERES MENSUAL");
            
            //CALCULO ULTIMO INTERES
            ultimoInteres = ((amortizacion * Double.parseDouble(txtPorcentajeInteres.getText()))/100);
            
            //CALCULO INTERES TOTAL
            interesTotal = (((interesMensual + ultimoInteres)/2) * Double.parseDouble(txtTiempoCredito.getText()));
            txtInteresTotal.setText(String.format("%.2f", interesTotal));
            
            //CALCULO PAGO MENSUAL
            pagoMensual = amortizacion + interesMensual;
            txtPagoMensual.setText(String.format("%.2f", pagoMensual));  
            lblPagoMensual.setText("3.12 PRIMER PAGO MENSUAL");
        } 
    }//GEN-LAST:event_txtValidarDatosMouseClicked

    private void lblBotonVerContratoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonVerContratoMouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtArchivoContrato.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }
        
        //FUNCIÓN PARA VISUALIZAR PDF
        try{
            ProcessBuilder visualizar = new ProcessBuilder();
            visualizar.command("cmd.exe","/c",rutaArchivoContrato);
            visualizar.start();
        }catch(IOException ex){
            Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblBotonVerContratoMouseClicked

    private void lblBotonVerReciboMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonVerReciboMouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtArchivoRecibo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }
        
        //FUNCIÓN PARA VISUALIZAR PDF
        try{
            ProcessBuilder visualizar = new ProcessBuilder();
            visualizar.command("cmd.exe","/c",rutaArchivoRecibo);
            visualizar.start();
        }catch(IOException ex){
            Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblBotonVerReciboMouseClicked

    private void lblBotonVerConstanciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonVerConstanciaMouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtArchivoConstancia.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }
        
        //FUNCIÓN PARA VISUALIZAR PDF
        try{
            ProcessBuilder visualizar = new ProcessBuilder();
            visualizar.command("cmd.exe","/c",rutaArchivoConstancia);
            visualizar.start();
        }catch(IOException ex){
            Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblBotonVerConstanciaMouseClicked

    private void lblBotonVerPatentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonVerPatentesMouseClicked
         //VALIDAR SI EXISTE UN PDF AGREGADO
        if(txtArchivoPatentes.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe agregar un PDF previamente a visualizar.");
            return;
        }
        
        //FUNCIÓN PARA VISUALIZAR PDF
        try{
            ProcessBuilder visualizar = new ProcessBuilder();
            visualizar.command("cmd.exe","/c",rutaArchivoPatentes);
            visualizar.start();
        }catch(IOException ex){
            Logger.getLogger(frmInClienteNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_lblBotonVerPatentesMouseClicked

    private void tblDetallesVehiculoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDetallesVehiculoMouseClicked
        //MOSTRAR LA FOTO DEL VEHICULO SELECCIONADO
        //SE OBTIENE LA FILA SELECCIONADA
        int fila = tblDetallesVehiculo.getSelectedRow();
        //SE OBTIENE EL CODIGO DEL VEHICULO
        int codigo = (int) tblDetallesVehiculo.getValueAt(fila, 0);
        //SE OBTIENE LA FOTO EN BASE AL CODIGO DEL VEHICULO
        ConexionBaseDeDatos.ConexionBD.Iniciar();
        Blob valor = ConexionBaseDeDatos.ConexionBD_FinanciamientoCarros.obtenerFotoDelVehiculo(codigo);
        ConexionBaseDeDatos.ConexionBD.Finalizar();
        //SE TRANSFORMA PARA MOSTRARLO EN EL LABEL
        //VARIABLES AUXILIARES PARA LAS FOTOS
        int blobLength = 0;
        ImageIcon fotografia = null;
        try {
            blobLength = (int) valor.length();            
            fotografia = new ImageIcon(valor.getBytes(1, blobLength));
        } catch (SQLException ex) {
            Logger.getLogger(frmInFinanciamientoCarrosNuevo.class.getName()).log(Level.SEVERE, null, ex);
        }
        //CONVERSIÓN A IMAGEN        
        Image imagen = fotografia.getImage();
        Image nuevaImagen = imagen.getScaledInstance(289, 248, Image.SCALE_SMOOTH);
        ImageIcon fotografiaMostrar = new ImageIcon(nuevaImagen);
        labelFoto.setIcon(fotografiaMostrar); 
    }//GEN-LAST:event_tblDetallesVehiculoMouseClicked

    private void lblBotonMasInformacionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBotonMasInformacionMouseClicked
        //OBTENER DATO SELECCIONADO
        int fila = tblDetallesVehiculo.getSelectedRow();
        int dato = (int) tblDetallesVehiculo.getValueAt(fila, 0);
        frmInCatalogoDeCarrosInformacion.codigo_vehiculo  = dato;
        //Abrir el Formulario para Información Carro
        frmInCatalogoDeCarrosInformacion frmCatalogoDeCarrosInformacion = new frmInCatalogoDeCarrosInformacion();
        ancho = (jdpPantallaPrincipal.getWidth()/2) - frmCatalogoDeCarrosInformacion.getWidth()/2;
        alto = (jdpPantallaPrincipal.getHeight()/2) - frmCatalogoDeCarrosInformacion.getHeight()/2;
        
        //INHABILITAR CAMPOS
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosDescripcion.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosNumeroPlaca.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosMarca.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosModelo.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosColor.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosMotor.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosIdGPS.setEditable(false);
        frmInCatalogoDeCarrosInformacion.txtInformacionCarrosChipGPS.setEditable(false);
        frmInCatalogoDeCarrosInformacion.lblBotonAdjuntarFoto.setEnabled(false);
        frmInCatalogoDeCarrosInformacion.lblBotonBuscarAgencia.setEnabled(false);
        frmInCatalogoDeCarrosInformacion.lblBotonActualizarRegistroCarro.setEnabled(false);
        
        //VARIABLE PARA DESABILITAR BOTONES
        frmInCatalogoDeCarrosInformacion.formularioFinanciamiento = true;
        
        jdpPantallaPrincipal.add(frmCatalogoDeCarrosInformacion);
        frmCatalogoDeCarrosInformacion.setLocation(ancho, alto);
        frmCatalogoDeCarrosInformacion.show();
        
    }//GEN-LAST:event_lblBotonMasInformacionMouseClicked

    private void txtCapitalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapitalKeyTyped
        // VALIDACIÓN DE SOLO NÚMEROS
        char validar = evt.getKeyChar();
        
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(null, "Solo se permite el ingreso de números.");
        }
        
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
        
        //NO PERMITIR COMA
        char key = evt.getKeyChar();
        if (key==',') {   
           evt.consume();    
        }
    }//GEN-LAST:event_txtCapitalKeyTyped

    private void txtPorcentajeInteresKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPorcentajeInteresKeyTyped
        // VALIDACIÓN DE SOLO NÚMEROS
        char validar = evt.getKeyChar();
        
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(null, "Solo se permite el ingreso de números.");
        }
        
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtPorcentajeInteresKeyTyped

    private void txtTiempoCreditoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTiempoCreditoKeyTyped
        // VALIDACIÓN DE SOLO NÚMEROS
        char validar = evt.getKeyChar();
        
        if(Character.isLetter(validar)){
            getToolkit().beep();
            evt.consume();
            
            JOptionPane.showMessageDialog(null, "Solo se permite el ingreso de números.");
        }
        
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtTiempoCreditoKeyTyped

    private void txtNumeroContratoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroContratoKeyTyped
        //FUNCIÓN PARA NO PERMITIR ESPACIOS
        char datoIngesado = evt.getKeyChar();
        
        if(Character.isWhitespace(datoIngesado)){
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroContratoKeyTyped

    private void lbBotonSiguiente1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbBotonSiguiente1MouseClicked
        //MOVIMIENTOS FLECHAS       
        if(contadorTab == 1){  
            //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
            contadorTab = contadorTab - 1;
            jTabbedPane1.setSelectedIndex(contadorTab);

            //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
            jTabbedPane1.setEnabledAt(contadorTab, true);
            jTabbedPane1.setEnabledAt(contadorTab+1, false);
        }else if(contadorTab == 2){
            //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
            contadorTab = contadorTab - 1;
            jTabbedPane1.setSelectedIndex(contadorTab);

            //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
            jTabbedPane1.setEnabledAt(contadorTab, true);
            jTabbedPane1.setEnabledAt(contadorTab+1, false);
            
        }else if(contadorTab == 3){
            //MOVER EL TAB DE ACUERDO A LA CANTIDAD DE CLICKS
            contadorTab = contadorTab - 1;
            jTabbedPane1.setSelectedIndex(contadorTab);

            //HABILITAR PESTAÑA ACTUAL Y DESHABILITAR LA ANTERIOR
            jTabbedPane1.setEnabledAt(contadorTab, true);
            jTabbedPane1.setEnabledAt(contadorTab+1, false);
            
            //CAMBIAR TEXTO E ICONO DE SIGUIENTE
            InputStream img = getClass().getResourceAsStream("/Imagenes/crud_paginacion_nolimit_right_50x50.png");
            ImageIcon icono;
            try {
                icono = new ImageIcon(ImageIO.read(img));
                lbBotonSiguiente.setIcon(icono);
            lbBotonSiguiente.setText("SIGUIENTE");
            } catch (IOException ex) {
                Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }                         
        }   
    }//GEN-LAST:event_lbBotonSiguiente1MouseClicked

    //FUNCIONES
    //FUNCIÓN PARA VALIDAR PESTAÑA 3
    private boolean validarCamposTab3(){
        if(txtNumeroContrato.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Número de Contrato");
            txtNumeroContrato.requestFocusInWindow();
            return false;
        }
        if(txtCapital.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Capital");
            txtCapital.requestFocusInWindow();
            return false;
        }
        if(txtPorcentajeInteres.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Porcentaje de Interés");
            txtPorcentajeInteres.requestFocusInWindow();
            return false;
        }
        if(cmbTipoInteres.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(null, "Campo no Seleccionado - Tipo de Interés");
            cmbTipoInteres.requestFocusInWindow();
            return false;
        }
        if(txtTiempoCredito.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Tiempo de Interés");
            txtTiempoCredito.requestFocusInWindow();
            return false;
        }
        if(dtFechaInicio.getDate() == null){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Fecha de Inicio");
            dtFechaInicio.requestFocusInWindow();
            return false;
        }
        if(dtFechaFinalizacion.getDate() == null){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Fecha de Finalización");
            dtFechaFinalizacion.requestFocusInWindow();
            return false;
        }
        if(txtAmortizacion.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Amortización");
            txtAmortizacion.requestFocusInWindow();
            return false;
        }
        if(txtInteresMensual.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Interés Mensual");
            txtInteresMensual.requestFocusInWindow();
            return false;
        }
        if(txtInteresTotal.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Interés Total");
            txtInteresTotal.requestFocusInWindow();
            return false;
        }
        if(txtPagoMensual.getText().equals("")){
            JOptionPane.showConfirmDialog(null, "Campo Vacío - Pago Mensual");
            txtPagoMensual.requestFocusInWindow();
            return false;
        }
        return true;
    }
    
    //FUNCIÓN PARA VALIDAR PESTAÑA 4
    private boolean validarCamposTab4(){
        if(txtArchivoContrato.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Archivo de Contrato");
            txtArchivoContrato.requestFocusInWindow();
            return false;
        }
        if(txtArchivoRecibo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Archivo de Recibo de Agua, Luz o Teléfono");
            txtArchivoRecibo.requestFocusInWindow();
            return false;
        }
        if(txtArchivoConstancia.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo Vacío - Archivo de Constancia de Ingresos o Estado de Cuenta");
            txtArchivoConstancia.requestFocusInWindow();
            return false;
        }
        if(txtArchivoPatentes.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Campo no Seleccionado - Archivo de Patente y RTU / Constancia Laboral del Cliente");
            txtArchivoPatentes.requestFocusInWindow();
            return false;
        }        
        return true;
    }
    
    //FUNCIÓN PARA ACTUALIZAR LA TABLA PRINCIPAL DEL MÓDULO
    private void actualizarTablaCatalogoCarros(ResultSet estructuraTabla) {
        try {
            DefaultTableModel modelo = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int filas, int columnas){
                if(columnas == 5){
                    return true;
                }else{
                    return false;
                }
            }
            };
            //Primero se Definen las Columnas
            modelo.addColumn("CÓDIGO");
            modelo.addColumn("CONDICIÓN DEL CRÉDITO");
            modelo.addColumn("NÚMERO DE CONTRATO");
            modelo.addColumn("CAPITAL");
            modelo.addColumn("DPI DEL CLIENTE");
            modelo.addColumn("NOMBRE DEL CLIENTE");
            modelo.addColumn("DESCRIPCIÓN");
            //modelo.addColumn("Tipo Serv.");
            
            //se definen los tamaños de las columnas
            frmInFinanciamientoCarros.tbClientes.setModel(modelo);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(0).setPreferredWidth(150);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(0).setMaxWidth(150);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(0).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(1).setPreferredWidth(250);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(1).setMaxWidth(250);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(1).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(2).setPreferredWidth(240);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(2).setMaxWidth(240);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(2).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(3).setPreferredWidth(140);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(3).setMaxWidth(140);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(3).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(4).setPreferredWidth(200);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(4).setMaxWidth(200);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(4).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(5).setPreferredWidth(290);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(5).setMaxWidth(290);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(5).setMinWidth(5);
            
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(6).setPreferredWidth(200);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(6).setMaxWidth(200);
            frmInFinanciamientoCarros.tbClientes.getColumnModel().getColumn(6).setMinWidth(5);
            
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassFinanciamientoCarro_LlenarTabla usuario = new ClassFinanciamientoCarro_LlenarTabla ( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                    estructuraTabla.getInt("codigo"),
                    estructuraTabla.getString("condicion_credito"),
                    estructuraTabla.getString("numero_contrato"), 
                    estructuraTabla.getString("capital"), 
                    estructuraTabla.getString("dpi"),
                    estructuraTabla.getString("nombre"),
                    estructuraTabla.getString("descripcion"));

                // se añade el registro encontrado al modelo de la tabla
                modelo.addRow(new Object[]{
                    usuario.getCodigo(),                  
                    usuario.getCondicion_credito(),
                    usuario.getNumero_contrato(),
                    usuario.getCapital(),
                    usuario.getDpi(),
                    usuario.getNombre(),
                    usuario.getDescripcion()});
            }

            
            //se muestra todo en la tabla
            frmInFinanciamientoCarros.tbClientes.setModel(modelo);

            
        } catch (SQLException ex) {
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbTipoInteres;
    private com.toedter.calendar.JDateChooser dtFechaFinalizacion;
    private com.toedter.calendar.JDateChooser dtFechaInicio;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelFoto;
    private javax.swing.JLabel lbBotonSiguiente;
    private javax.swing.JLabel lbBotonSiguiente1;
    private javax.swing.JLabel lblArchivosAdjuntos;
    private javax.swing.JLabel lblArchivosAdjuntos2;
    private javax.swing.JLabel lblArchivosAdjuntos3;
    private javax.swing.JLabel lblArchivosAdjuntos4;
    private javax.swing.JLabel lblBotonMasInformacion;
    private javax.swing.JLabel lblBotonVerConstancia;
    private javax.swing.JLabel lblBotonVerContrato;
    private javax.swing.JLabel lblBotonVerPatentes;
    private javax.swing.JLabel lblBotonVerRecibo;
    private javax.swing.JLabel lblInteresMensual;
    private javax.swing.JLabel lblPagoMensual;
    private javax.swing.JPanel panelFoto;
    private javax.swing.JTable tbDetallesDelCliente;
    private javax.swing.JTable tblDetallesVehiculo;
    private javax.swing.JTextField txtAmortizacion;
    private javax.swing.JTextField txtArchivoConstancia;
    private javax.swing.JTextField txtArchivoContrato;
    private javax.swing.JTextField txtArchivoPatentes;
    private javax.swing.JTextField txtArchivoRecibo;
    private javax.swing.JTextField txtBusquedaParametros;
    private javax.swing.JTextField txtCapital;
    private javax.swing.JTextField txtCondicionCredito;
    private javax.swing.JTextField txtDetalleVehiculoBusqueda;
    private javax.swing.JTextField txtInteresMensual;
    private javax.swing.JTextField txtInteresTotal;
    private javax.swing.JTextField txtNumeroContrato;
    private javax.swing.JTextField txtPagoMensual;
    private javax.swing.JTextField txtPorcentajeInteres;
    private javax.swing.JTextField txtTiempoCredito;
    private javax.swing.JLabel txtValidarDatos;
    // End of variables declaration//GEN-END:variables
}
