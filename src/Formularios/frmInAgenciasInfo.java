/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Clases.ClassAgencias;
import ConexionBaseDeDatos.ConexionBD;
import ConexionBaseDeDatos.ConexionBD_Agencias;
import static Formularios.frmInAgenciasBuscarDireccion.codigo;
import static Formularios.frmInAgenciasNuevo.codigo_direccion;
import static Formularios.frmInAgenciasNuevo.resultadoInstruccion;
import static Formularios.frmInAgenciasNuevo.txtDireccion;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Martin Rosales
 */
public class frmInAgenciasInfo extends javax.swing.JInternalFrame {
//VARIABLES GLOBALES PARA DIRECCION
    public static int codigo_direccion;
    public static String nombre_direccion;
    public static int codigo_agencia;
    int codigo_agencias;
    String state;
    String direccion_completa;
    /**
     * Creates new form frmInAgenciasInfo
     */
    public frmInAgenciasInfo() {
        initComponents();
        //DESPLIEGA EL FRAME EN EL CENTRO DE LA PANTALLA
                this.setLocation ((frmPrincipal.jdpPantallaPrincipal.getWidth () - this.getWidth ()) / 2,(frmPrincipal.jdpPantallaPrincipal.getHeight () - this.getHeight ()) / 2);
                //INICIA LA CONEXION A LA BD
                ConexionBD.Iniciar();
                llenarCampos(ConexionBD_Agencias.obtenerTodosLosDatosAgencias(codigo_agencia));
                ConexionBD.Finalizar();  }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCorreo = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        lblGuardar = new javax.swing.JLabel();
        lblBusqueda = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNumCasa = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtZona = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setClosable(true);
        setMinimumSize(new java.awt.Dimension(480, 605));
        setPreferredSize(new java.awt.Dimension(480, 605));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(134, 185, 22));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("INFORMACION DE AGENCIAS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(jLabel1)
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 478, -1));

        jLabel2.setText("1. NOMBRE:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, -1));
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 380, -1));

        jLabel3.setText("2. TELEFONO:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, -1, -1));
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 180, -1));

        jLabel4.setText("3. CORREO ELECTRONICO:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 260, -1, -1));
        getContentPane().add(txtCorreo, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 280, 180, -1));

        jLabel5.setText("7. DIRECCIÓN");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, -1, -1));

        txtDireccion.setEditable(false);
        getContentPane().add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 350, -1));

        lblGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_save_50x50.png"))); // NOI18N
        lblGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblGuardarMouseClicked(evt);
            }
        });
        getContentPane().add(lblGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 490, -1, -1));

        lblBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/crud_search_20x20.png"))); // NOI18N
        lblBusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBusquedaMouseClicked(evt);
            }
        });
        getContentPane().add(lblBusqueda, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, -1, -1));
        getContentPane().add(txtCalle, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 100, -1));

        jLabel6.setText("4. CALLE/AVENIDA");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        jLabel7.setText("5. NÚMERO DE CASA");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, -1, -1));
        getContentPane().add(txtNumCasa, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 360, 100, -1));

        jLabel8.setText("6. ZONA");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 340, -1, -1));
        getContentPane().add(txtZona, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 360, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblGuardarMouseClicked
        //Validar Campos Vacios
        if(txtNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Nombre");
        }else if(txtTelefono.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Telefono");
        }else if(txtCorreo.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Correo Electronico");
        }else if(txtDireccion.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Dirección");
        }else if(txtCalle.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Calle");
        }else if(txtNumCasa.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Número de Casa");
        }else if(txtZona.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo Vacio: Zona");
        }else{
            //SE EVALUA FORMATO INGRESADO EN CADA CAMPO
            if(!isNumeric(txtTelefono.getText())){
                JOptionPane.showMessageDialog(rootPane, "Ingrese Un Valor Numerico en el Campo: Telefono");
            }else if (!isNumeric(txtZona.getText())){
                JOptionPane.showMessageDialog(rootPane, "Ingrese Un Valor Numerico en el Campo: Zona");
            }else {
                //SE DELIMITAN CIERTOS CAMPOS DEPENDIENDO LOS CARACTERES MAXIMOS PERMITIDOS
                String contador;
                //VARIABLE QUE RECIBE EL CAMPO DETERMINADO Y COMPARARA SU LONGITUD
                contador=txtTelefono.getText();
                if(contador.length()>15){
                    JOptionPane.showMessageDialog(rootPane, "Telefono: Solo Puede Ingresar 8 Numeros Como Maximo");
                }else{ contador=txtZona.getText();
                    if(contador.length()>2){
                        JOptionPane.showMessageDialog(rootPane, "Zona: Solo Puede Ingresar 2 Numeros Como Maximo");
                    }else{
                        //TODOS LOS CAMPOS VERIFICADOS CORRECTAMENTE, PASA A INGRESARLOS A LA BD
                        String nombre = txtNombre.getText();
                        String telefono = txtTelefono.getText();
                        String correo = txtCorreo.getText();
                        String calle = txtCalle.getText();
                        String numcasa = txtNumCasa.getText();
                        String zona = txtZona.getText();
                        int direccion = codigo_direccion;
                        //DEVUELVE LOS VALORES YA EDITADOS
                        ConexionBD.Iniciar();
                        resultadoInstruccion = ConexionBD_Agencias.actualizarAgencias("VIGENTE", nombre, telefono, correo, calle, numcasa, zona, direccion, codigo_agencias);
                        ConexionBD.Finalizar();
                        //DETERMINA SI LOS DATOS SE INGRESARON CORRECTAMENTE O SI EXISTIO UN ERROR
                        if(resultadoInstruccion == false){
                            JOptionPane.showMessageDialog(null,"Hubo un problema al intentar agregar el registro, contacte a soporte tecnico si el problema persiste");
                        }else if (resultadoInstruccion == true ){
                            JOptionPane.showMessageDialog(null, "Datos ingresados correctamente");
                            //RESETEA LOS CAMPOS DE TEXTO
                            txtNombre.setText("");
                            txtTelefono.setText("");
                            txtCorreo.setText("");
                            txtCalle.setText("");
                            txtNumCasa.setText("");
                            txtZona.setText("");
                            txtDireccion.setText("");
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_lblGuardarMouseClicked
private void llenarCampos(ResultSet estructuraTabla){
        try{
            //se usa un while ya que se va a recorrer fila por fila lo que se obtuvo de la BD.
            while (estructuraTabla.next()) { 
                
                //se obtienen los datos de la base de datos mediante el uso del constructor de la clase correspondiente
                ClassAgencias agencia = new ClassAgencias( //se instancia un objeto de la clase correspondiente para llenar la tabla mediante un while
                        estructuraTabla.getInt("codigo"),                        
                        estructuraTabla.getString("state"),
                        estructuraTabla.getString("nombre_casa_comercial"),
                        estructuraTabla.getString("telefono"),
                        estructuraTabla.getString("correo_electronico"),
                        estructuraTabla.getString("calle_avenida"),
                        estructuraTabla.getString("numero_casa"),
                        estructuraTabla.getString("zona"),
                        estructuraTabla.getInt("cod_direccion"));
                
                //GUARDAR DATOS QUE NO SE AGREGARÁN A LOS TEXTBOX
                codigo_agencias = agencia.getCodigo();
                state = agencia.getState();
                codigo_direccion = agencia.getCod_direccion();               
                
                //OBTENER DIRECCION DEL CLIENTE
                direccion_completa = ConexionBaseDeDatos.ConexionBD.obtenerDireccionParaCliente(codigo_direccion);                
                
                //SE AGREGAN LOS DATOS A LAS CAJAS DE TEXTO
                txtNombre.setText(agencia.getNombre_casa_comercial());
                txtTelefono.setText(agencia.getTelefono());
                txtCorreo.setText(agencia.getCorreo_electronico());
                txtCalle.setText(agencia.getCalle_avenida());
                txtNumCasa.setText(agencia.getNumero_casa());
                txtZona.setText(agencia.getZona());
                txtDireccion.setText(direccion_completa);                         
            }
        }catch(SQLException ex){
            Logger.getLogger(ConexionBaseDeDatos.ConexionBD.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Parece que Hubo un error al cargar la tabla: " + ex);
        }
    }
    private void lblBusquedaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBusquedaMouseClicked
        //DESPLIEGA EL FORMULARIO DE BUSQUEDA DE DIRECCION
        frmInAgenciasBuscarDireccion frmBusqueda = new frmInAgenciasBuscarDireccion();
        frmPrincipal.jdpPantallaPrincipal.add(frmBusqueda);
        //DA VALOR AL COMPARADOR
        frmInAgenciasBuscarDireccion.comparador=true;
        frmBusqueda.show();
    }//GEN-LAST:event_lblBusquedaMouseClicked

        //VERIFICA SI EL VALOR DE UN CAMPO ES NUMERICO
        private static boolean isNumeric(String cadena){
        try {
                Integer.parseInt(cadena);
                return true;
        } catch (NumberFormatException nfe){
                return false;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblBusqueda;
    private javax.swing.JLabel lblGuardar;
    private javax.swing.JTextField txtCalle;
    private javax.swing.JTextField txtCorreo;
    public static javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumCasa;
    private javax.swing.JTextField txtTelefono;
    private javax.swing.JTextField txtZona;
    // End of variables declaration//GEN-END:variables
}
